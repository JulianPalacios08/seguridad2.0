

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Oct 18 09:06:16 2023

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F887 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0088                     	;# 
   108  0089                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  0105                     	;# 
   132  0107                     	;# 
   133  0108                     	;# 
   134  0109                     	;# 
   135  010C                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  0185                     	;# 
   141  0187                     	;# 
   142  0188                     	;# 
   143  0189                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  008F                     	;# 
   191  0090                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0094                     	;# 
   198  0095                     	;# 
   199  0096                     	;# 
   200  0097                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009E                     	;# 
   208  009F                     	;# 
   209  0105                     	;# 
   210  0107                     	;# 
   211  0108                     	;# 
   212  0109                     	;# 
   213  010C                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010F                     	;# 
   218  0185                     	;# 
   219  0187                     	;# 
   220  0188                     	;# 
   221  0189                     	;# 
   222  018C                     	;# 
   223  018D                     	;# 
   224  0000                     	;# 
   225  0001                     	;# 
   226  0002                     	;# 
   227  0003                     	;# 
   228  0004                     	;# 
   229  0005                     	;# 
   230  0006                     	;# 
   231  0007                     	;# 
   232  0008                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  000E                     	;# 
   240  000F                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0015                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001B                     	;# 
   255  001C                     	;# 
   256  001D                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  0081                     	;# 
   260  0085                     	;# 
   261  0086                     	;# 
   262  0087                     	;# 
   263  0088                     	;# 
   264  0089                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  008E                     	;# 
   268  008F                     	;# 
   269  0090                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0105                     	;# 
   288  0107                     	;# 
   289  0108                     	;# 
   290  0109                     	;# 
   291  010C                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  0185                     	;# 
   297  0187                     	;# 
   298  0188                     	;# 
   299  0189                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0008                     	;# 
   311  0009                     	;# 
   312  000A                     	;# 
   313  000B                     	;# 
   314  000C                     	;# 
   315  000D                     	;# 
   316  000E                     	;# 
   317  000E                     	;# 
   318  000F                     	;# 
   319  0010                     	;# 
   320  0011                     	;# 
   321  0012                     	;# 
   322  0013                     	;# 
   323  0014                     	;# 
   324  0015                     	;# 
   325  0015                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001B                     	;# 
   333  001C                     	;# 
   334  001D                     	;# 
   335  001E                     	;# 
   336  001F                     	;# 
   337  0081                     	;# 
   338  0085                     	;# 
   339  0086                     	;# 
   340  0087                     	;# 
   341  0088                     	;# 
   342  0089                     	;# 
   343  008C                     	;# 
   344  008D                     	;# 
   345  008E                     	;# 
   346  008F                     	;# 
   347  0090                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0094                     	;# 
   354  0095                     	;# 
   355  0096                     	;# 
   356  0097                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009A                     	;# 
   360  009B                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  009F                     	;# 
   365  0105                     	;# 
   366  0107                     	;# 
   367  0108                     	;# 
   368  0109                     	;# 
   369  010C                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010E                     	;# 
   373  010F                     	;# 
   374  0185                     	;# 
   375  0187                     	;# 
   376  0188                     	;# 
   377  0189                     	;# 
   378  018C                     	;# 
   379  018D                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  000D                     	;# 
   394  000E                     	;# 
   395  000E                     	;# 
   396  000F                     	;# 
   397  0010                     	;# 
   398  0011                     	;# 
   399  0012                     	;# 
   400  0013                     	;# 
   401  0014                     	;# 
   402  0015                     	;# 
   403  0015                     	;# 
   404  0016                     	;# 
   405  0017                     	;# 
   406  0018                     	;# 
   407  0019                     	;# 
   408  001A                     	;# 
   409  001B                     	;# 
   410  001B                     	;# 
   411  001C                     	;# 
   412  001D                     	;# 
   413  001E                     	;# 
   414  001F                     	;# 
   415  0081                     	;# 
   416  0085                     	;# 
   417  0086                     	;# 
   418  0087                     	;# 
   419  0088                     	;# 
   420  0089                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  008F                     	;# 
   425  0090                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009A                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  0105                     	;# 
   444  0107                     	;# 
   445  0108                     	;# 
   446  0109                     	;# 
   447  010C                     	;# 
   448  010C                     	;# 
   449  010D                     	;# 
   450  010E                     	;# 
   451  010F                     	;# 
   452  0185                     	;# 
   453  0187                     	;# 
   454  0188                     	;# 
   455  0189                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458                           
   459                           	psect	idataBANK0
   460  025E                     __pidataBANK0:
   461                           
   462                           ;initializer for keypad_getkey@F1268
   463  025E  3431               	retlw	49
   464  025F  3432               	retlw	50
   465  0260  3433               	retlw	51
   466  0261  3441               	retlw	65
   467  0262  3434               	retlw	52
   468  0263  3435               	retlw	53
   469  0264  3436               	retlw	54
   470  0265  3442               	retlw	66
   471  0266  3437               	retlw	55
   472  0267  3438               	retlw	56
   473  0268  3439               	retlw	57
   474  0269  3443               	retlw	67
   475  026A  342A               	retlw	42
   476  026B  3430               	retlw	48
   477  026C  3423               	retlw	35
   478  026D  3444               	retlw	68
   479                           
   480                           	psect	strings
   481  0003                     __pstrings:
   482  0003                     stringtab:
   483  0003                     __stringtab:
   484                           
   485                           ;	String table - string pointers are 1 byte each
   486  0003  1BFF               	btfsc	btemp+1,7
   487  0004  280D               	ljmp	stringcode
   488  0005  1383               	bcf	3,7
   489  0006  187F               	btfsc	btemp+1,0
   490  0007  1783               	bsf	3,7
   491  0008  0800               	movf	0,w
   492  0009  0A84               	incf	4,f
   493  000A  1903               	skipnz
   494  000B  0AFF               	incf	btemp+1,f
   495  000C  0008               	return
   496  000D                     stringcode:
   497  000D                     stringdir:
   498  000D  3000               	movlw	high stringdir
   499  000E  008A               	movwf	10
   500  000F  0804               	movf	4,w
   501  0010  0A84               	incf	4,f
   502  0011  0782               	addwf	2,f
   503  0012                     __stringbase:
   504  0012  3400               	retlw	0
   505  0013                     __end_of__stringtab:
   506  0013                     _dpowers:
   507  0013  3401               	retlw	1
   508  0014  3400               	retlw	0
   509  0015  340A               	retlw	10
   510  0016  3400               	retlw	0
   511  0017  3464               	retlw	100
   512  0018  3400               	retlw	0
   513  0019  34E8               	retlw	232
   514  001A  3403               	retlw	3
   515  001B  3410               	retlw	16
   516  001C  3427               	retlw	39
   517  001D                     __end_of_dpowers:
   518  001D                     _password:
   519  001D  3431               	retlw	49
   520  001E  3432               	retlw	50
   521  001F  3433               	retlw	51
   522  0020  3434               	retlw	52
   523  0021  3400               	retlw	0
   524  0022                     __end_of_password:
   525  0008                     _PORTDbits	set	8
   526  0008                     _PORTD	set	8
   527  0006                     _PORTB	set	6
   528  0049                     _RE1	set	73
   529  004A                     _RE2	set	74
   530  0048                     _RE0	set	72
   531  003A                     _RC2	set	58
   532  0038                     _RC0	set	56
   533  0039                     _RC1	set	57
   534  0087                     _TRISC	set	135
   535  0089                     _TRISE	set	137
   536  008F                     _OSCCON	set	143
   537  0088                     _TRISD	set	136
   538  0081                     _OPTION_REGbits	set	129
   539  0086                     _TRISB	set	134
   540  0189                     _ANSELH	set	393
   541  0022                     STR_4:
   542  0022  3473               	retlw	115	;'s'
   543  0023  3469               	retlw	105	;'i'
   544  0024  3472               	retlw	114	;'r'
   545  0025  343D               	retlw	61	;'='
   546  0026  3425               	retlw	37	;'%'
   547  0027  3464               	retlw	100	;'d'
   548  0028  342C               	retlw	44	;','
   549  0029  3473               	retlw	115	;'s'
   550  002A  3468               	retlw	104	;'h'
   551  002B  3431               	retlw	49	;'1'
   552  002C  343D               	retlw	61	;'='
   553  002D  3425               	retlw	37	;'%'
   554  002E  3464               	retlw	100	;'d'
   555  002F  342C               	retlw	44	;','
   556  0030  3473               	retlw	115	;'s'
   557  0031  346D               	retlw	109	;'m'
   558  0032  3474               	retlw	116	;'t'
   559  0033  343D               	retlw	61	;'='
   560  0034  3425               	retlw	37	;'%'
   561  0035  3464               	retlw	100	;'d'
   562  0036  3400               	retlw	0
   563  0037                     STR_3:
   564  0037  3469               	retlw	105	;'i'
   565  0038  346E               	retlw	110	;'n'
   566  0039  3474               	retlw	116	;'t'
   567  003A  3465               	retlw	101	;'e'
   568  003B  346E               	retlw	110	;'n'
   569  003C  3474               	retlw	116	;'t'
   570  003D  3465               	retlw	101	;'e'
   571  003E  3420               	retlw	32	;' '
   572  003F  3464               	retlw	100	;'d'
   573  0040  3465               	retlw	101	;'e'
   574  0041  3420               	retlw	32	;' '
   575  0042  346E               	retlw	110	;'n'
   576  0043  3475               	retlw	117	;'u'
   577  0044  3465               	retlw	101	;'e'
   578  0045  3476               	retlw	118	;'v'
   579  0046  346F               	retlw	111	;'o'
   580  0047  3400               	retlw	0
   581  0048                     STR_2:
   582  0048  3462               	retlw	98	;'b'
   583  0049  3469               	retlw	105	;'i'
   584  004A  3465               	retlw	101	;'e'
   585  004B  346E               	retlw	110	;'n'
   586  004C  3476               	retlw	118	;'v'
   587  004D  3465               	retlw	101	;'e'
   588  004E  346E               	retlw	110	;'n'
   589  004F  3469               	retlw	105	;'i'
   590  0050  3464               	retlw	100	;'d'
   591  0051  346F               	retlw	111	;'o'
   592  0052  3400               	retlw	0
   593  0053                     STR_1:
   594  0053  3470               	retlw	112	;'p'
   595  0054  3461               	retlw	97	;'a'
   596  0055  3473               	retlw	115	;'s'
   597  0056  3473               	retlw	115	;'s'
   598  0057  3477               	retlw	119	;'w'
   599  0058  346F               	retlw	111	;'o'
   600  0059  3472               	retlw	114	;'r'
   601  005A  3464               	retlw	100	;'d'
   602  005B  343A               	retlw	58	;':'
   603  005C  3400               	retlw	0
   604  005D                     STR_5:
   605  005D  3462               	retlw	98	;'b'
   606  005E  346C               	retlw	108	;'l'
   607  005F  346F               	retlw	111	;'o'
   608  0060  3471               	retlw	113	;'q'
   609  0061  3475               	retlw	117	;'u'
   610  0062  3465               	retlw	101	;'e'
   611  0063  3461               	retlw	97	;'a'
   612  0064  3464               	retlw	100	;'d'
   613  0065  346F               	retlw	111	;'o'
   614  0066  3400               	retlw	0
   615                           
   616                           	psect	cinit
   617  07E6                     start_initialization:	
   618                           ; #config settings
   619                           
   620  07E6                     __initialization:
   621                           
   622                           ; Initialize objects allocated to BANK0
   623  07E6  1383               	bcf	3,7	;select IRP bank0
   624  07E7  3067               	movlw	low (__pdataBANK0+16)
   625  07E8  00FD               	movwf	btemp+-1
   626  07E9  3002               	movlw	high __pidataBANK0
   627  07EA  00FE               	movwf	btemp
   628  07EB  305E               	movlw	low __pidataBANK0
   629  07EC  00FF               	movwf	btemp+1
   630  07ED  3057               	movlw	low __pdataBANK0
   631  07EE  0084               	movwf	4
   632  07EF  120A  118A  2272  120A  118A  	fcall	init_ram0
   633                           
   634                           ; Clear objects allocated to BANK0
   635  07F4  3020               	movlw	low __pbssBANK0
   636  07F5  0084               	movwf	4
   637  07F6  303D               	movlw	low (__pbssBANK0+29)
   638  07F7  120A  118A  2237  120A  118A  	fcall	clear_ram0
   639  07FC                     end_of_initialization:	
   640                           ;End of C runtime variable initialization code
   641                           
   642  07FC                     __end_of__initialization:
   643  07FC  0183               	clrf	3
   644  07FD  120A  118A  2CDC   	ljmp	_main	;jump to C main() function
   645                           
   646                           	psect	bssBANK0
   647  0020                     __pbssBANK0:
   648  0020                     _var_sensor_metal:
   649  0020                     	ds	1
   650  0021                     _var_sensor_hall:
   651  0021                     	ds	1
   652  0022                     _var_sensor_ir:
   653  0022                     	ds	1
   654  0023                     _tiempo:
   655  0023                     	ds	1
   656  0024                     _contador:
   657  0024                     	ds	1
   658  0025                     _idx:
   659  0025                     	ds	1
   660  0026                     _estado:
   661  0026                     	ds	1
   662  0027                     _buffer:
   663  0027                     	ds	17
   664  0038                     _pass_user:
   665  0038                     	ds	5
   666                           
   667                           	psect	dataBANK0
   668  0057                     __pdataBANK0:
   669  0057                     keypad_getkey@F1268:
   670  0057                     	ds	16
   671                           
   672                           	psect	inittext
   673  026E                     init_fetch0:	
   674                           ;	Called with low address in FSR and high address in W
   675                           
   676  026E  087E               	movf	btemp,w
   677  026F  008A               	movwf	10
   678  0270  087F               	movf	btemp+1,w
   679  0271  0082               	movwf	2
   680  0272                     init_ram0:	
   681                           ;Called with:
   682                           ;	high address of idata address in btemp 
   683                           ;	low address of idata address in btemp+1 
   684                           ;	low address of data in FSR
   685                           ;	high address + 1 of data in btemp-1
   686                           
   687  0272  120A  118A  226E  120A  118A  	fcall	init_fetch0
   688  0277  0080               	movwf	0
   689  0278  0A84               	incf	4,f
   690  0279  0804               	movf	4,w
   691  027A  067D               	xorwf	btemp+-1,w
   692  027B  1903               	btfsc	3,2
   693  027C  3400               	retlw	0
   694  027D  0AFF               	incf	btemp+1,f
   695  027E  1903               	btfsc	3,2
   696  027F  0AFE               	incf	btemp,f
   697  0280  2A72               	goto	init_ram0
   698                           
   699                           	psect	clrtext
   700  0237                     clear_ram0:	
   701                           ;	Called with FSR containing the base address, and
   702                           ;	W with the last address+1
   703                           
   704  0237  0064               	clrwdt	;clear the watchdog before getting into this loop
   705  0238                     clrloop0:
   706  0238  0180               	clrf	0	;clear RAM location pointed to by FSR
   707  0239  0A84               	incf	4,f	;increment pointer
   708  023A  0604               	xorwf	4,w	;XOR with final address
   709  023B  1903               	btfsc	3,2	;have we reached the end yet?
   710  023C  3400               	retlw	0	;all done for this memory range, return
   711  023D  0604               	xorwf	4,w	;XOR again to restore value
   712  023E  2A38               	goto	clrloop0	;do the next byte
   713                           
   714                           	psect	cstackCOMMON
   715  0070                     __pcstackCOMMON:
   716  0070                     ?_LCD_Command:
   717  0070                     ??_LCD_Command:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_funcion_seg:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_funcion_moni:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?_funcion_block:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?_funcion_alarma:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ??_funcion_alarma:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?_keypad_init:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ??_keypad_init:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ?_keypad_getkey:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ??_keypad_getkey:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ?_LCD_Init:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ?_LCD_Char:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ??_LCD_Char:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?_LCD_Clear:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ?_monitoring_sensor:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ??_monitoring_sensor:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     ?_main:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ?_strncmp:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ?___lwdiv:	
   772                           ; 2 bytes @ 0x0
   773                           
   774  0070                     monitoring_sensor@alarm_activ:	
   775                           ; 2 bytes @ 0x0
   776                           
   777  0070                     strncmp@s2:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0070                     ___lwdiv@divisor:	
   781                           ; 1 bytes @ 0x0
   782                           
   783                           
   784                           ; 2 bytes @ 0x0
   785  0070                     	ds	1
   786  0071                     strncmp@len:
   787                           
   788                           ; 2 bytes @ 0x1
   789  0071                     	ds	1
   790  0072                     LCD_Command@cmd:
   791  0072                     LCD_Char@dat:	
   792                           ; 1 bytes @ 0x2
   793                           
   794  0072                     ___lwdiv@dividend:	
   795                           ; 1 bytes @ 0x2
   796                           
   797                           
   798                           ; 2 bytes @ 0x2
   799  0072                     	ds	1
   800  0073                     ??_strncmp:
   801  0073                     ??_LCD_Init:	
   802                           ; 1 bytes @ 0x3
   803                           
   804  0073                     ?_LCD_String:	
   805                           ; 1 bytes @ 0x3
   806                           
   807  0073                     ??_LCD_Clear:	
   808                           ; 1 bytes @ 0x3
   809                           
   810  0073                     LCD_String@msg:	
   811                           ; 1 bytes @ 0x3
   812                           
   813                           
   814                           ; 2 bytes @ 0x3
   815  0073                     	ds	1
   816  0074                     ??___lwdiv:
   817                           
   818                           ; 1 bytes @ 0x4
   819  0074                     	ds	1
   820  0075                     ??_LCD_String:
   821  0075                     ?_LCD_String_xy:	
   822                           ; 1 bytes @ 0x5
   823                           
   824  0075                     LCD_String_xy@pos:	
   825                           ; 1 bytes @ 0x5
   826                           
   827  0075                     strncmp@s1:	
   828                           ; 1 bytes @ 0x5
   829                           
   830  0075                     ___lwdiv@quotient:	
   831                           ; 1 bytes @ 0x5
   832                           
   833                           
   834                           ; 2 bytes @ 0x5
   835  0075                     	ds	1
   836  0076                     LCD_String_xy@msg:
   837                           
   838                           ; 2 bytes @ 0x6
   839  0076                     	ds	1
   840  0077                     ___lwdiv@counter:
   841                           
   842                           ; 1 bytes @ 0x7
   843  0077                     	ds	1
   844  0078                     ??_LCD_String_xy:
   845  0078                     ?___lwmod:	
   846                           ; 1 bytes @ 0x8
   847                           
   848  0078                     ___lwmod@divisor:	
   849                           ; 2 bytes @ 0x8
   850                           
   851                           
   852                           ; 2 bytes @ 0x8
   853  0078                     	ds	1
   854  0079                     LCD_String_xy@row:
   855                           
   856                           ; 1 bytes @ 0x9
   857  0079                     	ds	1
   858  007A                     LCD_String_xy@location:
   859  007A                     ___lwmod@dividend:	
   860                           ; 1 bytes @ 0xA
   861                           
   862                           
   863                           ; 2 bytes @ 0xA
   864  007A                     	ds	1
   865  007B                     ??_funcion_seg:
   866  007B                     ??_funcion_block:	
   867                           ; 1 bytes @ 0xB
   868                           
   869                           
   870                           ; 1 bytes @ 0xB
   871  007B                     	ds	1
   872  007C                     ??___lwmod:
   873                           
   874                           ; 1 bytes @ 0xC
   875  007C                     	ds	1
   876  007D                     ___lwmod@counter:
   877                           
   878                           ; 1 bytes @ 0xD
   879  007D                     	ds	1
   880  007E                     ??_main:
   881                           
   882                           	psect	cstackBANK0
   883  003D                     __pcstackBANK0:	
   884                           ; 1 bytes @ 0xE
   885                           
   886  003D                     ?_sprintf:
   887  003D                     sprintf@f:	
   888                           ; 2 bytes @ 0x0
   889                           
   890  003D                     keypad_getkey@letras:	
   891                           ; 1 bytes @ 0x0
   892                           
   893                           
   894                           ; 16 bytes @ 0x0
   895  003D                     	ds	7
   896  0044                     ??_sprintf:
   897                           
   898                           ; 1 bytes @ 0x7
   899  0044                     	ds	3
   900  0047                     sprintf@ap:
   901                           
   902                           ; 1 bytes @ 0xA
   903  0047                     	ds	1
   904  0048                     sprintf@flag:
   905                           
   906                           ; 1 bytes @ 0xB
   907  0048                     	ds	1
   908  0049                     sprintf@ccnt:
   909                           
   910                           ; 2 bytes @ 0xC
   911  0049                     	ds	2
   912  004B                     sprintf@prec:
   913                           
   914                           ; 1 bytes @ 0xE
   915  004B                     	ds	1
   916  004C                     sprintf@val:
   917                           
   918                           ; 2 bytes @ 0xF
   919  004C                     	ds	1
   920  004D                     keypad_getkey@valor:
   921                           
   922                           ; 1 bytes @ 0x10
   923  004D                     	ds	1
   924  004E                     sprintf@sp:
   925  004E                     keypad_getkey@i:	
   926                           ; 1 bytes @ 0x11
   927                           
   928                           
   929                           ; 2 bytes @ 0x11
   930  004E                     	ds	1
   931  004F                     sprintf@c:
   932                           
   933                           ; 1 bytes @ 0x12
   934  004F                     	ds	1
   935  0050                     ??_funcion_moni:
   936  0050                     funcion_seg@key:	
   937                           ; 1 bytes @ 0x13
   938                           
   939                           
   940                           ; 1 bytes @ 0x13
   941  0050                     	ds	7
   942                           
   943                           	psect	maintext
   944  04DC                     __pmaintext:	
   945 ;;
   946 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   947 ;;
   948 ;; *************** function _main *****************
   949 ;; Defined at:
   950 ;;		line 64 in file "main.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;		None
   953 ;; Auto vars:     Size  Location     Type
   954 ;;		None
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   959 ;; Tracked objects:
   960 ;;		On entry : B00/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   964 ;;      Params:         0       0       0       0       0
   965 ;;      Locals:         0       0       0       0       0
   966 ;;      Temps:          0       0       0       0       0
   967 ;;      Totals:         0       0       0       0       0
   968 ;;Total ram usage:        0 bytes
   969 ;; Hardware stack levels required when called: 4
   970 ;; This function calls:
   971 ;;		_LCD_Init
   972 ;;		_funcion_alarma
   973 ;;		_funcion_block
   974 ;;		_funcion_moni
   975 ;;		_funcion_seg
   976 ;;		_keypad_init
   977 ;; This function is called by:
   978 ;;		Startup code after reset
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982  04DC                     _main:	
   983                           ;psect for function _main
   984                           
   985  04DC                     l1741:	
   986                           ;incstack = 0
   987                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   988                           
   989                           
   990                           ;main.c: 67:     OSCCON = 0x71;
   991  04DC  3071               	movlw	113
   992  04DD  1683               	bsf	3,5	;RP0=1, select bank1
   993  04DE  1303               	bcf	3,6	;RP1=0, select bank1
   994  04DF  008F               	movwf	15	;volatile
   995  04E0                     l1743:
   996                           
   997                           ;main.c: 68:     TRISE=0;
   998  04E0  0189               	clrf	9	;volatile
   999  04E1                     l1745:
  1000                           
  1001                           ;main.c: 69:     LCD_Init();
  1002  04E1  120A  118A  22DD  120A  118A  	fcall	_LCD_Init
  1003  04E6                     l1747:
  1004                           
  1005                           ;main.c: 71:     keypad_init();
  1006  04E6  120A  118A  223F  120A  118A  	fcall	_keypad_init
  1007  04EB                     l1749:
  1008                           
  1009                           ;main.c: 72:     TRISC=0x07;
  1010  04EB  3007               	movlw	7
  1011  04EC  1683               	bsf	3,5	;RP0=1, select bank1
  1012  04ED  1303               	bcf	3,6	;RP1=0, select bank1
  1013  04EE  0087               	movwf	7	;volatile
  1014  04EF                     l1751:
  1015                           
  1016                           ;main.c: 74:     var_sensor_ir = RC1;
  1017  04EF  3000               	movlw	0
  1018  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  1019  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  1020  04F2  1887               	btfsc	7,1	;volatile
  1021  04F3  3001               	movlw	1
  1022  04F4  00A2               	movwf	_var_sensor_ir
  1023  04F5                     l1753:
  1024                           
  1025                           ;main.c: 75:     var_sensor_hall = RC0;
  1026  04F5  3000               	movlw	0
  1027  04F6  1807               	btfsc	7,0	;volatile
  1028  04F7  3001               	movlw	1
  1029  04F8  00A1               	movwf	_var_sensor_hall
  1030  04F9                     l1755:
  1031                           
  1032                           ;main.c: 76:     var_sensor_metal = RC2;
  1033  04F9  3000               	movlw	0
  1034  04FA  1907               	btfsc	7,2	;volatile
  1035  04FB  3001               	movlw	1
  1036  04FC  00A0               	movwf	_var_sensor_metal
  1037  04FD                     l1757:
  1038                           
  1039                           ;main.c: 78:     estado = seguridad;
  1040  04FD  01A6               	clrf	_estado
  1041  04FE                     l1759:
  1042                           
  1043                           ;main.c: 82:         if(estado == seguridad){
  1044  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  1045  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  1046  0500  0826               	movf	_estado,w
  1047  0501  1D03               	btfss	3,2
  1048  0502  2D04               	goto	u1231
  1049  0503  2D05               	goto	u1230
  1050  0504                     u1231:
  1051  0504  2D0B               	goto	l1763
  1052  0505                     u1230:
  1053  0505                     l1761:
  1054                           
  1055                           ;main.c: 83:         funcion_seg();
  1056  0505  120A  118A  2532  120A  118A  	fcall	_funcion_seg
  1057                           
  1058                           ;main.c: 84:         }
  1059  050A  2CFE               	goto	l1759
  1060  050B                     l1763:
  1061  050B  0326               	decf	_estado,w
  1062  050C  1D03               	btfss	3,2
  1063  050D  2D0F               	goto	u1241
  1064  050E  2D10               	goto	u1240
  1065  050F                     u1241:
  1066  050F  2D16               	goto	l1767
  1067  0510                     u1240:
  1068  0510                     l1765:
  1069                           
  1070                           ;main.c: 86:             funcion_moni();
  1071  0510  120A  118A  2492  120A  118A  	fcall	_funcion_moni
  1072                           
  1073                           ;main.c: 88:         }
  1074  0515  2CFE               	goto	l1759
  1075  0516                     l1767:
  1076  0516  3002               	movlw	2
  1077  0517  0626               	xorwf	_estado,w
  1078  0518  1D03               	btfss	3,2
  1079  0519  2D1B               	goto	u1251
  1080  051A  2D1C               	goto	u1250
  1081  051B                     u1251:
  1082  051B  2D22               	goto	l1771
  1083  051C                     u1250:
  1084  051C                     l1769:
  1085                           
  1086                           ;main.c: 90:             funcion_block();
  1087  051C  120A  118A  2331  120A  118A  	fcall	_funcion_block
  1088                           
  1089                           ;main.c: 92:         }
  1090  0521  2CFE               	goto	l1759
  1091  0522                     l1771:
  1092  0522  3003               	movlw	3
  1093  0523  0626               	xorwf	_estado,w
  1094  0524  1D03               	btfss	3,2
  1095  0525  2D27               	goto	u1261
  1096  0526  2D28               	goto	u1260
  1097  0527                     u1261:
  1098  0527  2D2E               	goto	l194
  1099  0528                     u1260:
  1100  0528                     l1773:
  1101                           
  1102                           ;main.c: 94:             funcion_alarma();
  1103  0528  120A  118A  2298  120A  118A  	fcall	_funcion_alarma
  1104  052D  2CFE               	goto	l1759
  1105  052E                     l194:
  1106  052E  2CFE               	goto	l1759
  1107  052F  120A  118A  2800   	ljmp	start
  1108  0532                     __end_of_main:
  1109                           
  1110                           	psect	text1
  1111  023F                     __ptext1:	
  1112 ;; *************** function _keypad_init *****************
  1113 ;; Defined at:
  1114 ;;		line 38 in file "keypad.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      void 
  1121 ;; Registers used:
  1122 ;;		wreg, status,2, status,0
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1128 ;;      Params:         0       0       0       0       0
  1129 ;;      Locals:         0       0       0       0       0
  1130 ;;      Temps:          1       0       0       0       0
  1131 ;;      Totals:         1       0       0       0       0
  1132 ;;Total ram usage:        1 bytes
  1133 ;; Hardware stack levels used: 1
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		_main
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141  023F                     _keypad_init:	
  1142                           ;psect for function _keypad_init
  1143                           
  1144  023F                     l1641:	
  1145                           ;incstack = 0
  1146                           ; Regs used in _keypad_init: [wreg+status,2+status,0]
  1147                           
  1148                           
  1149                           ;keypad.c: 40:     TRISB &= ~(1<<0) & ~(1<<1) & ~(1<<2) & ~(1<<3);
  1150  023F  30F0               	movlw	240
  1151  0240  00F0               	movwf	??_keypad_init
  1152  0241  0870               	movf	??_keypad_init,w
  1153  0242  1683               	bsf	3,5	;RP0=1, select bank1
  1154  0243  1303               	bcf	3,6	;RP1=0, select bank1
  1155  0244  0586               	andwf	6,f	;volatile
  1156                           
  1157                           ;keypad.c: 41:     TRISB |= (1<<4) | (1<<5) | (1<<6) | (1<<7);
  1158  0245  30F0               	movlw	240
  1159  0246  00F0               	movwf	??_keypad_init
  1160  0247  0870               	movf	??_keypad_init,w
  1161  0248  0486               	iorwf	6,f	;volatile
  1162  0249                     l1643:
  1163                           
  1164                           ;keypad.c: 42:     OPTION_REGbits.nRBPU = 0;
  1165  0249  1381               	bcf	1,7	;volatile
  1166  024A                     l1645:
  1167                           
  1168                           ;keypad.c: 43:     ANSELH = 0;
  1169  024A  1683               	bsf	3,5	;RP0=1, select bank3
  1170  024B  1703               	bsf	3,6	;RP1=1, select bank3
  1171  024C  0189               	clrf	9	;volatile
  1172  024D                     l13:
  1173  024D  0008               	return
  1174  024E                     __end_of_keypad_init:
  1175                           
  1176                           	psect	text2
  1177  0532                     __ptext2:	
  1178 ;; *************** function _funcion_seg *****************
  1179 ;; Defined at:
  1180 ;;		line 100 in file "main.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;  key             1   19[BANK0 ] unsigned char 
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1194 ;;      Params:         0       0       0       0       0
  1195 ;;      Locals:         0       1       0       0       0
  1196 ;;      Temps:          3       0       0       0       0
  1197 ;;      Totals:         3       1       0       0       0
  1198 ;;Total ram usage:        4 bytes
  1199 ;; Hardware stack levels used: 1
  1200 ;; Hardware stack levels required when called: 3
  1201 ;; This function calls:
  1202 ;;		_LCD_Char
  1203 ;;		_LCD_Clear
  1204 ;;		_LCD_Command
  1205 ;;		_LCD_String_xy
  1206 ;;		_keypad_getkey
  1207 ;;		_strncmp
  1208 ;; This function is called by:
  1209 ;;		_main
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213  0532                     _funcion_seg:	
  1214                           ;psect for function _funcion_seg
  1215                           
  1216  0532                     l1661:	
  1217                           ;incstack = 0
  1218                           ; Regs used in _funcion_seg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1219                           
  1220  0532                     l1663:
  1221                           
  1222                           ;main.c: 102:  LCD_String_xy(0,0,"password:");
  1223  0532  01F5               	clrf	LCD_String_xy@pos
  1224  0533  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1225  0534  00F6               	movwf	LCD_String_xy@msg
  1226  0535  3080               	movlw	128
  1227  0536  00F7               	movwf	LCD_String_xy@msg+1
  1228  0537  3000               	movlw	0
  1229  0538  120A  118A  2307  120A  118A  	fcall	_LCD_String_xy
  1230  053D                     l1665:
  1231                           
  1232                           ;main.c: 103:         LCD_Command(0xC0);
  1233  053D  30C0               	movlw	192
  1234  053E  120A  118A  2362  120A  118A  	fcall	_LCD_Command
  1235  0543                     l1667:
  1236                           
  1237                           ;main.c: 105:             key = keypad_getkey();
  1238  0543  120A  118A  26E5  120A  118A  	fcall	_keypad_getkey
  1239  0548  00FB               	movwf	??_funcion_seg
  1240  0549  087B               	movf	??_funcion_seg,w
  1241  054A  1283               	bcf	3,5	;RP0=0, select bank0
  1242  054B  1303               	bcf	3,6	;RP1=0, select bank0
  1243  054C  00D0               	movwf	funcion_seg@key
  1244  054D                     l1669:
  1245                           
  1246                           ;main.c: 106:             if(key != 0){
  1247  054D  0850               	movf	funcion_seg@key,w
  1248  054E  1903               	btfsc	3,2
  1249  054F  2D51               	goto	u1161
  1250  0550  2D52               	goto	u1160
  1251  0551                     u1161:
  1252  0551  2D66               	goto	l1677
  1253  0552                     u1160:
  1254  0552                     l1671:
  1255                           
  1256                           ;main.c: 107:                 LCD_Char('*');
  1257  0552  302A               	movlw	42
  1258  0553  120A  118A  2398  120A  118A  	fcall	_LCD_Char
  1259  0558                     l1673:
  1260                           
  1261                           ;main.c: 109:                 pass_user[idx++] = key;
  1262  0558  1283               	bcf	3,5	;RP0=0, select bank0
  1263  0559  1303               	bcf	3,6	;RP1=0, select bank0
  1264  055A  0850               	movf	funcion_seg@key,w
  1265  055B  00FB               	movwf	??_funcion_seg
  1266  055C  0825               	movf	_idx,w
  1267  055D  3E38               	addlw	(low (_pass_user| 0))& (0+255)
  1268  055E  0084               	movwf	4
  1269  055F  087B               	movf	??_funcion_seg,w
  1270  0560  1383               	bcf	3,7	;select IRP bank0
  1271  0561  0080               	movwf	0
  1272  0562                     l1675:
  1273  0562  3001               	movlw	1
  1274  0563  00FB               	movwf	??_funcion_seg
  1275  0564  087B               	movf	??_funcion_seg,w
  1276  0565  07A5               	addwf	_idx,f
  1277  0566                     l1677:
  1278                           
  1279                           ;main.c: 111:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1280  0566  3002               	movlw	2
  1281  0567  00FD               	movwf	??_funcion_seg+2
  1282  0568  3004               	movlw	4
  1283  0569  00FC               	movwf	??_funcion_seg+1
  1284  056A  30BA               	movlw	186
  1285  056B  00FB               	movwf	??_funcion_seg
  1286  056C                     u1277:
  1287  056C  0BFB               	decfsz	??_funcion_seg,f
  1288  056D  2D6C               	goto	u1277
  1289  056E  0BFC               	decfsz	??_funcion_seg+1,f
  1290  056F  2D6C               	goto	u1277
  1291  0570  0BFD               	decfsz	??_funcion_seg+2,f
  1292  0571  2D6C               	goto	u1277
  1293  0572  0000               	nop
  1294  0573                     l1679:
  1295                           
  1296                           ;main.c: 112:         }while(idx < 4);
  1297  0573  3004               	movlw	4
  1298  0574  1283               	bcf	3,5	;RP0=0, select bank0
  1299  0575  1303               	bcf	3,6	;RP1=0, select bank0
  1300  0576  0225               	subwf	_idx,w
  1301  0577  1C03               	skipc
  1302  0578  2D7A               	goto	u1171
  1303  0579  2D7B               	goto	u1170
  1304  057A                     u1171:
  1305  057A  2D43               	goto	l1667
  1306  057B                     u1170:
  1307  057B                     l1681:
  1308                           
  1309                           ;main.c: 114:         if(strncmp(pass_user,password,4)==0){
  1310  057B  300B               	movlw	(low ((_password-__stringbase)| (0+32768)))& (0+255)
  1311  057C  00FB               	movwf	??_funcion_seg
  1312  057D  087B               	movf	??_funcion_seg,w
  1313  057E  00F0               	movwf	strncmp@s2
  1314  057F  3004               	movlw	4
  1315  0580  00F1               	movwf	strncmp@len
  1316  0581  3000               	movlw	0
  1317  0582  00F2               	movwf	strncmp@len+1
  1318  0583  3038               	movlw	(low (_pass_user| 0))& (0+255)
  1319  0584  120A  118A  244C  120A  118A  	fcall	_strncmp
  1320  0589  0870               	movf	?_strncmp,w
  1321  058A  0471               	iorwf	?_strncmp+1,w
  1322  058B  1D03               	btfss	3,2
  1323  058C  2D8E               	goto	u1181
  1324  058D  2D8F               	goto	u1180
  1325  058E                     u1181:
  1326  058E  2DB2               	goto	l1693
  1327  058F                     u1180:
  1328  058F                     l1683:
  1329                           
  1330                           ;main.c: 115:             LCD_Clear();
  1331  058F  120A  118A  224E  120A  118A  	fcall	_LCD_Clear
  1332  0594                     l1685:
  1333                           
  1334                           ;main.c: 116:             LCD_String_xy(0,0,"bienvenido");
  1335  0594  01F5               	clrf	LCD_String_xy@pos
  1336  0595  3036               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1337  0596  00F6               	movwf	LCD_String_xy@msg
  1338  0597  3080               	movlw	128
  1339  0598  00F7               	movwf	LCD_String_xy@msg+1
  1340  0599  3000               	movlw	0
  1341  059A  120A  118A  2307  120A  118A  	fcall	_LCD_String_xy
  1342  059F                     l1687:
  1343                           
  1344                           ;main.c: 117:             _delay((unsigned long)((2000)*(8000000/4000.0)));
  1345  059F  3015               	movlw	21
  1346  05A0  00FD               	movwf	??_funcion_seg+2
  1347  05A1  304B               	movlw	75
  1348  05A2  00FC               	movwf	??_funcion_seg+1
  1349  05A3  30BE               	movlw	190
  1350  05A4  00FB               	movwf	??_funcion_seg
  1351  05A5                     u1287:
  1352  05A5  0BFB               	decfsz	??_funcion_seg,f
  1353  05A6  2DA5               	goto	u1287
  1354  05A7  0BFC               	decfsz	??_funcion_seg+1,f
  1355  05A8  2DA5               	goto	u1287
  1356  05A9  0BFD               	decfsz	??_funcion_seg+2,f
  1357  05AA  2DA5               	goto	u1287
  1358  05AB  0000               	nop
  1359  05AC                     l1689:
  1360                           
  1361                           ;main.c: 118:             RE0 = 0x02;
  1362  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  1363  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  1364  05AE  1009               	bcf	9,0	;volatile
  1365  05AF                     l1691:
  1366                           
  1367                           ;main.c: 120:             estado = monitoreo;
  1368  05AF  01A6               	clrf	_estado
  1369  05B0  0AA6               	incf	_estado,f
  1370                           
  1371                           ;main.c: 121:         }
  1372  05B1  2DE4               	goto	l213
  1373  05B2                     l1693:
  1374  05B2  3003               	movlw	3
  1375  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  1376  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  1377  05B5  0224               	subwf	_contador,w
  1378  05B6  1803               	skipnc
  1379  05B7  2DB9               	goto	u1191
  1380  05B8  2DBA               	goto	u1190
  1381  05B9                     u1191:
  1382  05B9  2DD2               	goto	l1703
  1383  05BA                     u1190:
  1384  05BA                     l1695:
  1385                           
  1386                           ;main.c: 124:             LCD_Clear();
  1387  05BA  120A  118A  224E  120A  118A  	fcall	_LCD_Clear
  1388  05BF                     l1697:
  1389                           
  1390                           ;main.c: 125:             LCD_String_xy(0,0,"intente de nuevo");
  1391  05BF  01F5               	clrf	LCD_String_xy@pos
  1392  05C0  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1393  05C1  00F6               	movwf	LCD_String_xy@msg
  1394  05C2  3080               	movlw	128
  1395  05C3  00F7               	movwf	LCD_String_xy@msg+1
  1396  05C4  3000               	movlw	0
  1397  05C5  120A  118A  2307  120A  118A  	fcall	_LCD_String_xy
  1398  05CA                     l1699:
  1399                           
  1400                           ;main.c: 126:             RE2 = 0x01;
  1401  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  1402  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  1403  05CC  1509               	bsf	9,2	;volatile
  1404  05CD                     l1701:
  1405                           
  1406                           ;main.c: 127:             contador++;
  1407  05CD  3001               	movlw	1
  1408  05CE  00FB               	movwf	??_funcion_seg
  1409  05CF  087B               	movf	??_funcion_seg,w
  1410  05D0  07A4               	addwf	_contador,f
  1411                           
  1412                           ;main.c: 128:             }
  1413  05D1  2DE4               	goto	l213
  1414  05D2                     l1703:
  1415  05D2  3003               	movlw	3
  1416  05D3  0624               	xorwf	_contador,w
  1417  05D4  1D03               	btfss	3,2
  1418  05D5  2DD7               	goto	u1201
  1419  05D6  2DD8               	goto	u1200
  1420  05D7                     u1201:
  1421  05D7  2DE4               	goto	l213
  1422  05D8                     u1200:
  1423  05D8                     l1705:
  1424                           
  1425                           ;main.c: 130:         LCD_Clear();
  1426  05D8  120A  118A  224E  120A  118A  	fcall	_LCD_Clear
  1427  05DD                     l1707:
  1428                           
  1429                           ;main.c: 131:         idx = 0;
  1430  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  1431  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  1432  05DF  01A5               	clrf	_idx
  1433  05E0                     l1709:
  1434                           
  1435                           ;main.c: 132:         estado = bloqueo;
  1436  05E0  3002               	movlw	2
  1437  05E1  00FB               	movwf	??_funcion_seg
  1438  05E2  087B               	movf	??_funcion_seg,w
  1439  05E3  00A6               	movwf	_estado
  1440  05E4                     l213:
  1441  05E4  0008               	return
  1442  05E5                     __end_of_funcion_seg:
  1443                           
  1444                           	psect	text3
  1445  044C                     __ptext3:	
  1446 ;; *************** function _strncmp *****************
  1447 ;; Defined at:
  1448 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\strncmp.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;  s1              1    wreg     PTR const unsigned char 
  1451 ;;		 -> pass_user(5), 
  1452 ;;  s2              1    0[COMMON] PTR const unsigned char 
  1453 ;;		 -> password(5), 
  1454 ;;  len             2    1[COMMON] unsigned int 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  s1              1    5[COMMON] PTR const unsigned char 
  1457 ;;		 -> pass_user(5), 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  2    0[COMMON] int 
  1460 ;; Registers used:
  1461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1467 ;;      Params:         3       0       0       0       0
  1468 ;;      Locals:         1       0       0       0       0
  1469 ;;      Temps:          2       0       0       0       0
  1470 ;;      Totals:         6       0       0       0       0
  1471 ;;Total ram usage:        6 bytes
  1472 ;; Hardware stack levels used: 2
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_funcion_seg
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480  044C                     _strncmp:	
  1481                           ;psect for function _strncmp
  1482                           
  1483                           
  1484                           ;incstack = 0
  1485                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  1486                           ;strncmp@s1 stored from wreg
  1487  044C  00F5               	movwf	strncmp@s1
  1488  044D                     l1553:
  1489  044D  2C81               	goto	l791
  1490  044E                     l1555:
  1491  044E  0875               	movf	strncmp@s1,w
  1492  044F  0084               	movwf	4
  1493  0450  1383               	bcf	3,7	;select IRP bank0
  1494  0451  0800               	movf	0,w
  1495  0452  1903               	btfsc	3,2
  1496  0453  2C55               	goto	u1061
  1497  0454  2C56               	goto	u1060
  1498  0455                     u1061:
  1499  0455  2C66               	goto	l1559
  1500  0456                     u1060:
  1501  0456                     l1557:
  1502  0456  0870               	movf	strncmp@s2,w
  1503  0457  0084               	movwf	4
  1504  0458  120A  118A  200D  120A  118A  	fcall	stringdir
  1505  045D  00F3               	movwf	??_strncmp
  1506  045E  0875               	movf	strncmp@s1,w
  1507  045F  0084               	movwf	4
  1508  0460  0800               	movf	0,w
  1509  0461  0673               	xorwf	??_strncmp,w
  1510  0462  1903               	skipnz
  1511  0463  2C65               	goto	u1071
  1512  0464  2C66               	goto	u1070
  1513  0465                     u1071:
  1514  0465  2C79               	goto	l1563
  1515  0466                     u1070:
  1516  0466                     l1559:
  1517  0466  0870               	movf	strncmp@s2,w
  1518  0467  0084               	movwf	4
  1519  0468  120A  118A  200D  120A  118A  	fcall	stringdir
  1520  046D  00F3               	movwf	??_strncmp
  1521  046E  0875               	movf	strncmp@s1,w
  1522  046F  0084               	movwf	4
  1523  0470  0800               	movf	0,w
  1524  0471  00F4               	movwf	??_strncmp+1
  1525  0472  0873               	movf	??_strncmp,w
  1526  0473  0274               	subwf	??_strncmp+1,w
  1527  0474  00F0               	movwf	?_strncmp
  1528  0475  01F1               	clrf	?_strncmp+1
  1529  0476  1C03               	skipc
  1530  0477  03F1               	decf	?_strncmp+1,f
  1531  0478  2C91               	goto	l796
  1532  0479                     l1563:
  1533  0479  3001               	movlw	1
  1534  047A  00F3               	movwf	??_strncmp
  1535  047B  0873               	movf	??_strncmp,w
  1536  047C  07F5               	addwf	strncmp@s1,f
  1537  047D  3001               	movlw	1
  1538  047E  00F3               	movwf	??_strncmp
  1539  047F  0873               	movf	??_strncmp,w
  1540  0480  07F0               	addwf	strncmp@s2,f
  1541  0481                     l791:
  1542  0481  3001               	movlw	1
  1543  0482  02F1               	subwf	strncmp@len,f
  1544  0483  3000               	movlw	0
  1545  0484  1C03               	skipc
  1546  0485  03F2               	decf	strncmp@len+1,f
  1547  0486  02F2               	subwf	strncmp@len+1,f
  1548  0487  0A71               	incf	strncmp@len,w
  1549  0488  1D03               	skipz
  1550  0489  2C8E               	goto	u1081
  1551  048A  0A72               	incf	strncmp@len+1,w
  1552  048B  1D03               	btfss	3,2
  1553  048C  2C8E               	goto	u1081
  1554  048D  2C8F               	goto	u1080
  1555  048E                     u1081:
  1556  048E  2C4E               	goto	l1555
  1557  048F                     u1080:
  1558  048F                     l1565:
  1559  048F  01F0               	clrf	?_strncmp
  1560  0490  01F1               	clrf	?_strncmp+1
  1561  0491                     l796:
  1562  0491  0008               	return
  1563  0492                     __end_of_strncmp:
  1564                           
  1565                           	psect	text4
  1566  06E5                     __ptext4:	
  1567 ;; *************** function _keypad_getkey *****************
  1568 ;; Defined at:
  1569 ;;		line 59 in file "keypad.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;		None
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  letras         16    0[BANK0 ] unsigned char [4][4]
  1574 ;;  i               2   17[BANK0 ] int 
  1575 ;;  valor           1   16[BANK0 ] unsigned char 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      unsigned char 
  1578 ;; Registers used:
  1579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1585 ;;      Params:         0       0       0       0       0
  1586 ;;      Locals:         0      19       0       0       0
  1587 ;;      Temps:          4       0       0       0       0
  1588 ;;      Totals:         4      19       0       0       0
  1589 ;;Total ram usage:       23 bytes
  1590 ;; Hardware stack levels used: 1
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_funcion_seg
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598  06E5                     _keypad_getkey:	
  1599                           ;psect for function _keypad_getkey
  1600                           
  1601  06E5                     l1421:	
  1602                           ;incstack = 0
  1603                           ; Regs used in _keypad_getkey: [wreg-fsr0h+status,2+status,0+btemp+1]
  1604                           
  1605                           
  1606                           ;keypad.c: 61: char letras[4][4]={ {'1','2','3','A'},
  1607  06E5  303D               	movlw	keypad_getkey@letras& (0+255)
  1608  06E6  0084               	movwf	4
  1609  06E7  3057               	movlw	low keypad_getkey@F1268
  1610  06E8  00F0               	movwf	??_keypad_getkey
  1611  06E9  0804               	movf	4,w
  1612  06EA  00F1               	movwf	??_keypad_getkey+1
  1613  06EB  3010               	movlw	16
  1614  06EC  00F2               	movwf	??_keypad_getkey+2
  1615  06ED                     u800:
  1616  06ED  0870               	movf	??_keypad_getkey,w
  1617  06EE  0084               	movwf	4
  1618  06EF  1383               	bcf	3,7	;select IRP bank0
  1619  06F0  0800               	movf	0,w
  1620  06F1  00F3               	movwf	??_keypad_getkey+3
  1621  06F2  0AF0               	incf	??_keypad_getkey,f
  1622  06F3  0871               	movf	??_keypad_getkey+1,w
  1623  06F4  0084               	movwf	4
  1624  06F5  0873               	movf	??_keypad_getkey+3,w
  1625  06F6  0080               	movwf	0
  1626  06F7  0AF1               	incf	??_keypad_getkey+1,f
  1627  06F8  0BF2               	decfsz	??_keypad_getkey+2,f
  1628  06F9  2EED               	goto	u800
  1629  06FA                     l1423:
  1630  06FA                     l1425:
  1631                           
  1632                           ;keypad.c: 66: char valor=0;
  1633  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  1634  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  1635  06FC  01CD               	clrf	keypad_getkey@valor
  1636  06FD                     l1427:
  1637                           
  1638                           ;keypad.c: 68: for(i=0;i<4;i++){
  1639  06FD  01CE               	clrf	keypad_getkey@i
  1640  06FE  01CF               	clrf	keypad_getkey@i+1
  1641  06FF                     l1433:
  1642                           
  1643                           ;keypad.c: 70:    if(i==0){
  1644  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  1645  0700  1303               	bcf	3,6	;RP1=0, select bank0
  1646  0701  084E               	movf	keypad_getkey@i,w
  1647  0702  044F               	iorwf	keypad_getkey@i+1,w
  1648  0703  1D03               	btfss	3,2
  1649  0704  2F06               	goto	u811
  1650  0705  2F07               	goto	u810
  1651  0706                     u811:
  1652  0706  2F34               	goto	l1453
  1653  0707                     u810:
  1654  0707                     l1435:
  1655                           
  1656                           ;keypad.c: 72:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(1<<1)|(0<<0);
  1657  0707  30FE               	movlw	254
  1658  0708  0086               	movwf	6	;volatile
  1659                           
  1660                           ;keypad.c: 73:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1661  0709  3042               	movlw	66
  1662  070A  00F0               	movwf	??_keypad_getkey
  1663  070B                     u1297:
  1664  070B  0BF0               	decfsz	??_keypad_getkey,f
  1665  070C  2F0B               	goto	u1297
  1666  070D  0000               	nop
  1667                           
  1668                           ;keypad.c: 74:       while (!(PORTB & (1<<4))){valor=letras[0][0];}
  1669  070E  2F13               	goto	l1439
  1670  070F                     l1437:
  1671  070F  083D               	movf	keypad_getkey@letras,w
  1672  0710  00F0               	movwf	??_keypad_getkey
  1673  0711  0870               	movf	??_keypad_getkey,w
  1674  0712  00CD               	movwf	keypad_getkey@valor
  1675  0713                     l1439:
  1676  0713  1283               	bcf	3,5	;RP0=0, select bank0
  1677  0714  1303               	bcf	3,6	;RP1=0, select bank0
  1678  0715  1E06               	btfss	6,4	;volatile
  1679  0716  2F18               	goto	u821
  1680  0717  2F19               	goto	u820
  1681  0718                     u821:
  1682  0718  2F0F               	goto	l1437
  1683  0719                     u820:
  1684  0719  2F1E               	goto	l1443
  1685  071A                     l1441:
  1686  071A  083E               	movf	keypad_getkey@letras+1,w
  1687  071B  00F0               	movwf	??_keypad_getkey
  1688  071C  0870               	movf	??_keypad_getkey,w
  1689  071D  00CD               	movwf	keypad_getkey@valor
  1690  071E                     l1443:
  1691  071E  1E86               	btfss	6,5	;volatile
  1692  071F  2F21               	goto	u831
  1693  0720  2F22               	goto	u830
  1694  0721                     u831:
  1695  0721  2F1A               	goto	l1441
  1696  0722                     u830:
  1697  0722  2F27               	goto	l1447
  1698  0723                     l1445:
  1699  0723  083F               	movf	keypad_getkey@letras+2,w
  1700  0724  00F0               	movwf	??_keypad_getkey
  1701  0725  0870               	movf	??_keypad_getkey,w
  1702  0726  00CD               	movwf	keypad_getkey@valor
  1703  0727                     l1447:
  1704  0727  1F06               	btfss	6,6	;volatile
  1705  0728  2F2A               	goto	u841
  1706  0729  2F2B               	goto	u840
  1707  072A                     u841:
  1708  072A  2F23               	goto	l1445
  1709  072B                     u840:
  1710  072B  2F30               	goto	l1451
  1711  072C                     l1449:
  1712  072C  0840               	movf	keypad_getkey@letras+3,w
  1713  072D  00F0               	movwf	??_keypad_getkey
  1714  072E  0870               	movf	??_keypad_getkey,w
  1715  072F  00CD               	movwf	keypad_getkey@valor
  1716  0730                     l1451:
  1717  0730  1F86               	btfss	6,7	;volatile
  1718  0731  2F33               	goto	u851
  1719  0732  2F34               	goto	u850
  1720  0733                     u851:
  1721  0733  2F2C               	goto	l1449
  1722  0734                     u850:
  1723  0734                     l1453:
  1724                           
  1725                           ;keypad.c: 80:    if(i==1){
  1726  0734  034E               	decf	keypad_getkey@i,w
  1727  0735  044F               	iorwf	keypad_getkey@i+1,w
  1728  0736  1D03               	btfss	3,2
  1729  0737  2F39               	goto	u861
  1730  0738  2F3A               	goto	u860
  1731  0739                     u861:
  1732  0739  2F67               	goto	l1473
  1733  073A                     u860:
  1734  073A                     l1455:
  1735                           
  1736                           ;keypad.c: 81:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(0<<1)|(1<<0);
  1737  073A  30FD               	movlw	253
  1738  073B  0086               	movwf	6	;volatile
  1739                           
  1740                           ;keypad.c: 82:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1741  073C  3042               	movlw	66
  1742  073D  00F0               	movwf	??_keypad_getkey
  1743  073E                     u1307:
  1744  073E  0BF0               	decfsz	??_keypad_getkey,f
  1745  073F  2F3E               	goto	u1307
  1746  0740  0000               	nop
  1747                           
  1748                           ;keypad.c: 83:       while (!(PORTB & (1<<4))){valor=letras[1][0];}
  1749  0741  2F46               	goto	l1459
  1750  0742                     l1457:
  1751  0742  0841               	movf	keypad_getkey@letras+4,w
  1752  0743  00F0               	movwf	??_keypad_getkey
  1753  0744  0870               	movf	??_keypad_getkey,w
  1754  0745  00CD               	movwf	keypad_getkey@valor
  1755  0746                     l1459:
  1756  0746  1283               	bcf	3,5	;RP0=0, select bank0
  1757  0747  1303               	bcf	3,6	;RP1=0, select bank0
  1758  0748  1E06               	btfss	6,4	;volatile
  1759  0749  2F4B               	goto	u871
  1760  074A  2F4C               	goto	u870
  1761  074B                     u871:
  1762  074B  2F42               	goto	l1457
  1763  074C                     u870:
  1764  074C  2F51               	goto	l1463
  1765  074D                     l1461:
  1766  074D  0842               	movf	keypad_getkey@letras+5,w
  1767  074E  00F0               	movwf	??_keypad_getkey
  1768  074F  0870               	movf	??_keypad_getkey,w
  1769  0750  00CD               	movwf	keypad_getkey@valor
  1770  0751                     l1463:
  1771  0751  1E86               	btfss	6,5	;volatile
  1772  0752  2F54               	goto	u881
  1773  0753  2F55               	goto	u880
  1774  0754                     u881:
  1775  0754  2F4D               	goto	l1461
  1776  0755                     u880:
  1777  0755  2F5A               	goto	l1467
  1778  0756                     l1465:
  1779  0756  0843               	movf	keypad_getkey@letras+6,w
  1780  0757  00F0               	movwf	??_keypad_getkey
  1781  0758  0870               	movf	??_keypad_getkey,w
  1782  0759  00CD               	movwf	keypad_getkey@valor
  1783  075A                     l1467:
  1784  075A  1F06               	btfss	6,6	;volatile
  1785  075B  2F5D               	goto	u891
  1786  075C  2F5E               	goto	u890
  1787  075D                     u891:
  1788  075D  2F56               	goto	l1465
  1789  075E                     u890:
  1790  075E  2F63               	goto	l1471
  1791  075F                     l1469:
  1792  075F  0844               	movf	keypad_getkey@letras+7,w
  1793  0760  00F0               	movwf	??_keypad_getkey
  1794  0761  0870               	movf	??_keypad_getkey,w
  1795  0762  00CD               	movwf	keypad_getkey@valor
  1796  0763                     l1471:
  1797  0763  1F86               	btfss	6,7	;volatile
  1798  0764  2F66               	goto	u901
  1799  0765  2F67               	goto	u900
  1800  0766                     u901:
  1801  0766  2F5F               	goto	l1469
  1802  0767                     u900:
  1803  0767                     l1473:
  1804                           
  1805                           ;keypad.c: 89:    if(i==2){
  1806  0767  3002               	movlw	2
  1807  0768  064E               	xorwf	keypad_getkey@i,w
  1808  0769  044F               	iorwf	keypad_getkey@i+1,w
  1809  076A  1D03               	btfss	3,2
  1810  076B  2F6D               	goto	u911
  1811  076C  2F6E               	goto	u910
  1812  076D                     u911:
  1813  076D  2F9B               	goto	l1493
  1814  076E                     u910:
  1815  076E                     l1475:
  1816                           
  1817                           ;keypad.c: 90:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(0<<2)|(1<<1)|(1<<0);
  1818  076E  30FB               	movlw	251
  1819  076F  0086               	movwf	6	;volatile
  1820                           
  1821                           ;keypad.c: 91:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1822  0770  3042               	movlw	66
  1823  0771  00F0               	movwf	??_keypad_getkey
  1824  0772                     u1317:
  1825  0772  0BF0               	decfsz	??_keypad_getkey,f
  1826  0773  2F72               	goto	u1317
  1827  0774  0000               	nop
  1828                           
  1829                           ;keypad.c: 92:       while (!(PORTB & (1<<4))){valor=letras[2][0];}
  1830  0775  2F7A               	goto	l1479
  1831  0776                     l1477:
  1832  0776  0845               	movf	keypad_getkey@letras+8,w
  1833  0777  00F0               	movwf	??_keypad_getkey
  1834  0778  0870               	movf	??_keypad_getkey,w
  1835  0779  00CD               	movwf	keypad_getkey@valor
  1836  077A                     l1479:
  1837  077A  1283               	bcf	3,5	;RP0=0, select bank0
  1838  077B  1303               	bcf	3,6	;RP1=0, select bank0
  1839  077C  1E06               	btfss	6,4	;volatile
  1840  077D  2F7F               	goto	u921
  1841  077E  2F80               	goto	u920
  1842  077F                     u921:
  1843  077F  2F76               	goto	l1477
  1844  0780                     u920:
  1845  0780  2F85               	goto	l1483
  1846  0781                     l1481:
  1847  0781  0846               	movf	keypad_getkey@letras+9,w
  1848  0782  00F0               	movwf	??_keypad_getkey
  1849  0783  0870               	movf	??_keypad_getkey,w
  1850  0784  00CD               	movwf	keypad_getkey@valor
  1851  0785                     l1483:
  1852  0785  1E86               	btfss	6,5	;volatile
  1853  0786  2F88               	goto	u931
  1854  0787  2F89               	goto	u930
  1855  0788                     u931:
  1856  0788  2F81               	goto	l1481
  1857  0789                     u930:
  1858  0789  2F8E               	goto	l1487
  1859  078A                     l1485:
  1860  078A  0847               	movf	keypad_getkey@letras+10,w
  1861  078B  00F0               	movwf	??_keypad_getkey
  1862  078C  0870               	movf	??_keypad_getkey,w
  1863  078D  00CD               	movwf	keypad_getkey@valor
  1864  078E                     l1487:
  1865  078E  1F06               	btfss	6,6	;volatile
  1866  078F  2F91               	goto	u941
  1867  0790  2F92               	goto	u940
  1868  0791                     u941:
  1869  0791  2F8A               	goto	l1485
  1870  0792                     u940:
  1871  0792  2F97               	goto	l1491
  1872  0793                     l1489:
  1873  0793  0848               	movf	keypad_getkey@letras+11,w
  1874  0794  00F0               	movwf	??_keypad_getkey
  1875  0795  0870               	movf	??_keypad_getkey,w
  1876  0796  00CD               	movwf	keypad_getkey@valor
  1877  0797                     l1491:
  1878  0797  1F86               	btfss	6,7	;volatile
  1879  0798  2F9A               	goto	u951
  1880  0799  2F9B               	goto	u950
  1881  079A                     u951:
  1882  079A  2F93               	goto	l1489
  1883  079B                     u950:
  1884  079B                     l1493:
  1885                           
  1886                           ;keypad.c: 98:    if(i==3){
  1887  079B  3003               	movlw	3
  1888  079C  064E               	xorwf	keypad_getkey@i,w
  1889  079D  044F               	iorwf	keypad_getkey@i+1,w
  1890  079E  1D03               	btfss	3,2
  1891  079F  2FA1               	goto	u961
  1892  07A0  2FA2               	goto	u960
  1893  07A1                     u961:
  1894  07A1  2FCF               	goto	l1513
  1895  07A2                     u960:
  1896  07A2                     l1495:
  1897                           
  1898                           ;keypad.c: 99:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(0<<3)|(1<<2)|(1<<1)|(1<<0);
  1899  07A2  30F7               	movlw	247
  1900  07A3  0086               	movwf	6	;volatile
  1901                           
  1902                           ;keypad.c: 100:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1903  07A4  3042               	movlw	66
  1904  07A5  00F0               	movwf	??_keypad_getkey
  1905  07A6                     u1327:
  1906  07A6  0BF0               	decfsz	??_keypad_getkey,f
  1907  07A7  2FA6               	goto	u1327
  1908  07A8  0000               	nop
  1909                           
  1910                           ;keypad.c: 101:       while (!(PORTB & (1<<4))){valor=letras[3][0];}
  1911  07A9  2FAE               	goto	l1499
  1912  07AA                     l1497:
  1913  07AA  0849               	movf	keypad_getkey@letras+12,w
  1914  07AB  00F0               	movwf	??_keypad_getkey
  1915  07AC  0870               	movf	??_keypad_getkey,w
  1916  07AD  00CD               	movwf	keypad_getkey@valor
  1917  07AE                     l1499:
  1918  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  1919  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  1920  07B0  1E06               	btfss	6,4	;volatile
  1921  07B1  2FB3               	goto	u971
  1922  07B2  2FB4               	goto	u970
  1923  07B3                     u971:
  1924  07B3  2FAA               	goto	l1497
  1925  07B4                     u970:
  1926  07B4  2FB9               	goto	l1503
  1927  07B5                     l1501:
  1928  07B5  084A               	movf	keypad_getkey@letras+13,w
  1929  07B6  00F0               	movwf	??_keypad_getkey
  1930  07B7  0870               	movf	??_keypad_getkey,w
  1931  07B8  00CD               	movwf	keypad_getkey@valor
  1932  07B9                     l1503:
  1933  07B9  1E86               	btfss	6,5	;volatile
  1934  07BA  2FBC               	goto	u981
  1935  07BB  2FBD               	goto	u980
  1936  07BC                     u981:
  1937  07BC  2FB5               	goto	l1501
  1938  07BD                     u980:
  1939  07BD  2FC2               	goto	l1507
  1940  07BE                     l1505:
  1941  07BE  084B               	movf	keypad_getkey@letras+14,w
  1942  07BF  00F0               	movwf	??_keypad_getkey
  1943  07C0  0870               	movf	??_keypad_getkey,w
  1944  07C1  00CD               	movwf	keypad_getkey@valor
  1945  07C2                     l1507:
  1946  07C2  1F06               	btfss	6,6	;volatile
  1947  07C3  2FC5               	goto	u991
  1948  07C4  2FC6               	goto	u990
  1949  07C5                     u991:
  1950  07C5  2FBE               	goto	l1505
  1951  07C6                     u990:
  1952  07C6  2FCB               	goto	l1511
  1953  07C7                     l1509:
  1954  07C7  084C               	movf	keypad_getkey@letras+15,w
  1955  07C8  00F0               	movwf	??_keypad_getkey
  1956  07C9  0870               	movf	??_keypad_getkey,w
  1957  07CA  00CD               	movwf	keypad_getkey@valor
  1958  07CB                     l1511:
  1959  07CB  1F86               	btfss	6,7	;volatile
  1960  07CC  2FCE               	goto	u1001
  1961  07CD  2FCF               	goto	u1000
  1962  07CE                     u1001:
  1963  07CE  2FC7               	goto	l1509
  1964  07CF                     u1000:
  1965  07CF                     l1513:
  1966                           
  1967                           ;keypad.c: 106:    }
  1968  07CF  3001               	movlw	1
  1969  07D0  07CE               	addwf	keypad_getkey@i,f
  1970  07D1  1803               	skipnc
  1971  07D2  0ACF               	incf	keypad_getkey@i+1,f
  1972  07D3  3000               	movlw	0
  1973  07D4  07CF               	addwf	keypad_getkey@i+1,f
  1974  07D5                     l1515:
  1975  07D5  084F               	movf	keypad_getkey@i+1,w
  1976  07D6  3A80               	xorlw	128
  1977  07D7  00FF               	movwf	btemp+1
  1978  07D8  3080               	movlw	128
  1979  07D9  027F               	subwf	btemp+1,w
  1980  07DA  1D03               	skipz
  1981  07DB  2FDE               	goto	u1015
  1982  07DC  3004               	movlw	4
  1983  07DD  024E               	subwf	keypad_getkey@i,w
  1984  07DE                     u1015:
  1985  07DE  1C03               	skipc
  1986  07DF  2FE1               	goto	u1011
  1987  07E0  2FE2               	goto	u1010
  1988  07E1                     u1011:
  1989  07E1  2EFF               	goto	l1433
  1990  07E2                     u1010:
  1991  07E2                     l1517:
  1992                           
  1993                           ;keypad.c: 108:    return valor;
  1994  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1995  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  1996  07E4  084D               	movf	keypad_getkey@valor,w
  1997  07E5                     l72:
  1998  07E5  0008               	return
  1999  07E6                     __end_of_keypad_getkey:
  2000                           
  2001                           	psect	text5
  2002  0492                     __ptext5:	
  2003 ;; *************** function _funcion_moni *****************
  2004 ;; Defined at:
  2005 ;;		line 137 in file "main.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;		None
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  n               2    0        int 
  2010 ;; Return value:  Size  Location     Type
  2011 ;;                  1    wreg      void 
  2012 ;; Registers used:
  2013 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2019 ;;      Params:         0       0       0       0       0
  2020 ;;      Locals:         0       0       0       0       0
  2021 ;;      Temps:          0       7       0       0       0
  2022 ;;      Totals:         0       7       0       0       0
  2023 ;;Total ram usage:        7 bytes
  2024 ;; Hardware stack levels used: 1
  2025 ;; Hardware stack levels required when called: 3
  2026 ;; This function calls:
  2027 ;;		_LCD_String_xy
  2028 ;;		_monitoring_sensor
  2029 ;;		_sprintf
  2030 ;; This function is called by:
  2031 ;;		_main
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035  0492                     _funcion_moni:	
  2036                           ;psect for function _funcion_moni
  2037                           
  2038  0492                     l1711:	
  2039                           ;incstack = 0
  2040                           ; Regs used in _funcion_moni: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2041                           
  2042                           
  2043                           ;main.c: 138: if(monitoring_sensor() == 1){
  2044  0492  120A  118A  2281  120A  118A  	fcall	_monitoring_sensor
  2045  0497  3A01               	xorlw	1
  2046  0498  1D03               	skipz
  2047  0499  2C9B               	goto	u1211
  2048  049A  2C9C               	goto	u1210
  2049  049B                     u1211:
  2050  049B  2CDB               	goto	l217
  2051  049C                     u1210:
  2052  049C                     l1713:
  2053                           
  2054                           ;main.c: 139:             estado = alarma;
  2055  049C  3003               	movlw	3
  2056  049D  1283               	bcf	3,5	;RP0=0, select bank0
  2057  049E  1303               	bcf	3,6	;RP1=0, select bank0
  2058  049F  00D0               	movwf	??_funcion_moni
  2059  04A0  0850               	movf	??_funcion_moni,w
  2060  04A1  00A6               	movwf	_estado
  2061  04A2                     l1715:
  2062  04A2  3010               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2063  04A3  00D0               	movwf	??_funcion_moni
  2064  04A4  0850               	movf	??_funcion_moni,w
  2065  04A5  00BD               	movwf	sprintf@f
  2066  04A6  0822               	movf	_var_sensor_ir,w
  2067  04A7  00D1               	movwf	??_funcion_moni+1
  2068  04A8  01D2               	clrf	??_funcion_moni+2
  2069  04A9  0851               	movf	??_funcion_moni+1,w
  2070  04AA  00BE               	movwf	?_sprintf+1
  2071  04AB  0852               	movf	??_funcion_moni+2,w
  2072  04AC  00BF               	movwf	?_sprintf+2
  2073  04AD  0821               	movf	_var_sensor_hall,w
  2074  04AE  00D3               	movwf	??_funcion_moni+3
  2075  04AF  01D4               	clrf	??_funcion_moni+4
  2076  04B0  0853               	movf	??_funcion_moni+3,w
  2077  04B1  00C0               	movwf	?_sprintf+3
  2078  04B2  0854               	movf	??_funcion_moni+4,w
  2079  04B3  00C1               	movwf	?_sprintf+4
  2080  04B4  0820               	movf	_var_sensor_metal,w
  2081  04B5  00D5               	movwf	??_funcion_moni+5
  2082  04B6  01D6               	clrf	??_funcion_moni+6
  2083  04B7  0855               	movf	??_funcion_moni+5,w
  2084  04B8  00C2               	movwf	?_sprintf+5
  2085  04B9  0856               	movf	??_funcion_moni+6,w
  2086  04BA  00C3               	movwf	?_sprintf+6
  2087  04BB  3027               	movlw	(low (_buffer| 0))& (0+255)
  2088  04BC  120A  118A  25E5  120A  118A  	fcall	_sprintf
  2089  04C1                     l1717:
  2090                           
  2091                           ;main.c: 141:         LCD_String_xy(0,0,buffer);
  2092  04C1  01F5               	clrf	LCD_String_xy@pos
  2093  04C2  3027               	movlw	(low (_buffer| 0))& (0+255)
  2094  04C3  00F6               	movwf	LCD_String_xy@msg
  2095  04C4  3000               	movlw	0
  2096  04C5  00F7               	movwf	LCD_String_xy@msg+1
  2097  04C6  3000               	movlw	0
  2098  04C7  120A  118A  2307  120A  118A  	fcall	_LCD_String_xy
  2099                           
  2100                           ;main.c: 142:         _delay((unsigned long)((2000)*(8000000/4000.0)));
  2101  04CC  3015               	movlw	21
  2102  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  2103  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  2104  04CF  00D2               	movwf	??_funcion_moni+2
  2105  04D0  304B               	movlw	75
  2106  04D1  00D1               	movwf	??_funcion_moni+1
  2107  04D2  30BD               	movlw	189
  2108  04D3  00D0               	movwf	??_funcion_moni
  2109  04D4                     u1337:
  2110  04D4  0BD0               	decfsz	??_funcion_moni,f
  2111  04D5  2CD4               	goto	u1337
  2112  04D6  0BD1               	decfsz	??_funcion_moni+1,f
  2113  04D7  2CD4               	goto	u1337
  2114  04D8  0BD2               	decfsz	??_funcion_moni+2,f
  2115  04D9  2CD4               	goto	u1337
  2116  04DA  2CDB               	nop2
  2117  04DB                     l217:
  2118  04DB  0008               	return
  2119  04DC                     __end_of_funcion_moni:
  2120                           
  2121                           	psect	text6
  2122  05E5                     __ptext6:	
  2123 ;; *************** function _sprintf *****************
  2124 ;; Defined at:
  2125 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  sp              1    wreg     PTR unsigned char 
  2128 ;;		 -> buffer(17), 
  2129 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2130 ;;		 -> STR_4(21), 
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  2133 ;;		 -> buffer(17), 
  2134 ;;  tmpval          4    0        struct .
  2135 ;;  val             2   15[BANK0 ] unsigned int 
  2136 ;;  ccnt            2   12[BANK0 ] int 
  2137 ;;  cp              2    0        PTR const unsigned char 
  2138 ;;  len             2    0        unsigned int 
  2139 ;;  c               1   18[BANK0 ] unsigned char 
  2140 ;;  prec            1   14[BANK0 ] char 
  2141 ;;  flag            1   11[BANK0 ] unsigned char 
  2142 ;;  ap              1   10[BANK0 ] PTR void [1]
  2143 ;;		 -> ?_sprintf(2), 
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  2    0[BANK0 ] int 
  2146 ;; Registers used:
  2147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2153 ;;      Params:         0       7       0       0       0
  2154 ;;      Locals:         0       9       0       0       0
  2155 ;;      Temps:          0       3       0       0       0
  2156 ;;      Totals:         0      19       0       0       0
  2157 ;;Total ram usage:       19 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 1
  2160 ;; This function calls:
  2161 ;;		___lwdiv
  2162 ;;		___lwmod
  2163 ;; This function is called by:
  2164 ;;		_funcion_moni
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168  05E5                     _sprintf:	
  2169                           ;psect for function _sprintf
  2170                           
  2171                           
  2172                           ;incstack = 0
  2173                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2174                           ;sprintf@sp stored from wreg
  2175  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  2176  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  2177  05E7  00CE               	movwf	sprintf@sp
  2178  05E8                     l1569:
  2179                           
  2180                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2181  05E8  01C9               	clrf	sprintf@ccnt
  2182  05E9  01CA               	clrf	sprintf@ccnt+1
  2183  05EA                     l1571:
  2184                           
  2185                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 543:  } tmpval;;C
      +                          :\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 545:  unsigned int 
      +                          val;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 546:  unsigne
      +                          d len;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 547:  const
      +                           char * cp;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 550:  
      +                          *ap = __va_start();
  2186  05EA  303E               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2187  05EB  00C4               	movwf	??_sprintf
  2188  05EC  0844               	movf	??_sprintf,w
  2189  05ED  00C7               	movwf	sprintf@ap
  2190                           
  2191                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2192  05EE  2ECA               	goto	l1629
  2193  05EF                     l1573:
  2194                           
  2195                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2196  05EF  3025               	movlw	37
  2197  05F0  064F               	xorwf	sprintf@c,w
  2198  05F1  1903               	btfsc	3,2
  2199  05F2  2DF4               	goto	u1091
  2200  05F3  2DF5               	goto	u1090
  2201  05F4                     u1091:
  2202  05F4  2E07               	goto	l1581
  2203  05F5                     u1090:
  2204  05F5                     l1575:
  2205                           
  2206                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)),(++
      +                          ccnt));
  2207  05F5  084F               	movf	sprintf@c,w
  2208  05F6  00C4               	movwf	??_sprintf
  2209  05F7  084E               	movf	sprintf@sp,w
  2210  05F8  0084               	movwf	4
  2211  05F9  0844               	movf	??_sprintf,w
  2212  05FA  1383               	bcf	3,7	;select IRP bank0
  2213  05FB  0080               	movwf	0
  2214  05FC                     l1577:
  2215  05FC  3001               	movlw	1
  2216  05FD  00C4               	movwf	??_sprintf
  2217  05FE  0844               	movf	??_sprintf,w
  2218  05FF  07CE               	addwf	sprintf@sp,f
  2219  0600                     l1579:
  2220  0600  3001               	movlw	1
  2221  0601  07C9               	addwf	sprintf@ccnt,f
  2222  0602  1803               	skipnc
  2223  0603  0ACA               	incf	sprintf@ccnt+1,f
  2224  0604  3000               	movlw	0
  2225  0605  07CA               	addwf	sprintf@ccnt+1,f
  2226                           
  2227                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 559:    continue;
  2228  0606  2ECA               	goto	l1629
  2229  0607                     l1581:
  2230                           
  2231                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2232  0607  01C8               	clrf	sprintf@flag
  2233  0608                     l1585:	
  2234                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2235                           
  2236  0608  3001               	movlw	1
  2237  0609  07BD               	addwf	sprintf@f,f
  2238  060A  30FF               	movlw	-1
  2239  060B  073D               	addwf	sprintf@f,w
  2240  060C  0084               	movwf	4
  2241  060D  120A  118A  200D  120A  118A  	fcall	stringdir
  2242  0612  00CF               	movwf	sprintf@c
  2243  0613  00C4               	movwf	??_sprintf
  2244  0614  01C5               	clrf	??_sprintf+1
  2245                           
  2246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2247                           ; Switch size 1, requested type "simple"
  2248                           ; Number of cases is 1, Range of values is 0 to 0
  2249                           ; switch strategies available:
  2250                           ; Name         Instructions Cycles
  2251                           ; simple_byte            4     3 (average)
  2252                           ; direct_byte           11     8 (fixed)
  2253                           ; jumptable            260     6 (fixed)
  2254                           ;	Chosen strategy is simple_byte
  2255  0615  0845               	movf	??_sprintf+1,w
  2256  0616  3A00               	xorlw	0	; case 0
  2257  0617  1903               	skipnz
  2258  0618  2E1A               	goto	l1795
  2259  0619  2ECA               	goto	l1629
  2260  061A                     l1795:
  2261                           
  2262                           ; Switch size 1, requested type "simple"
  2263                           ; Number of cases is 3, Range of values is 0 to 105
  2264                           ; switch strategies available:
  2265                           ; Name         Instructions Cycles
  2266                           ; simple_byte           10     6 (average)
  2267                           ; jumptable            260     6 (fixed)
  2268                           ;	Chosen strategy is simple_byte
  2269  061A  0844               	movf	??_sprintf,w
  2270  061B  3A00               	xorlw	0	; case 0
  2271  061C  1903               	skipnz
  2272  061D  2EDC               	goto	l1631
  2273  061E  3A64               	xorlw	100	; case 100
  2274  061F  1903               	skipnz
  2275  0620  2E25               	goto	l1587
  2276  0621  3A0D               	xorlw	13	; case 105
  2277  0622  1903               	skipnz
  2278  0623  2E25               	goto	l1587
  2279  0624  2ECA               	goto	l1629
  2280  0625                     l1587:
  2281                           
  2282                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2283  0625  0847               	movf	sprintf@ap,w
  2284  0626  0084               	movwf	4
  2285  0627  1383               	bcf	3,7	;select IRP bank0
  2286  0628  0800               	movf	0,w
  2287  0629  00CC               	movwf	sprintf@val
  2288  062A  0A84               	incf	4,f
  2289  062B  0800               	movf	0,w
  2290  062C  00CD               	movwf	sprintf@val+1
  2291  062D                     l1589:
  2292  062D  3002               	movlw	2
  2293  062E  00C4               	movwf	??_sprintf
  2294  062F  0844               	movf	??_sprintf,w
  2295  0630  07C7               	addwf	sprintf@ap,f
  2296  0631                     l1591:
  2297                           
  2298                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2299  0631  1FCD               	btfss	sprintf@val+1,7
  2300  0632  2E34               	goto	u1101
  2301  0633  2E35               	goto	u1100
  2302  0634                     u1101:
  2303  0634  2E3E               	goto	l1597
  2304  0635                     u1100:
  2305  0635                     l1593:
  2306                           
  2307                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2308  0635  3003               	movlw	3
  2309  0636  00C4               	movwf	??_sprintf
  2310  0637  0844               	movf	??_sprintf,w
  2311  0638  04C8               	iorwf	sprintf@flag,f
  2312  0639                     l1595:
  2313                           
  2314                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2315  0639  09CC               	comf	sprintf@val,f
  2316  063A  09CD               	comf	sprintf@val+1,f
  2317  063B  0ACC               	incf	sprintf@val,f
  2318  063C  1903               	skipnz
  2319  063D  0ACD               	incf	sprintf@val+1,f
  2320  063E                     l1597:
  2321                           
  2322                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2323  063E  01CF               	clrf	sprintf@c
  2324  063F  0ACF               	incf	sprintf@c,f
  2325  0640                     l1603:
  2326                           
  2327                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2328  0640  084F               	movf	sprintf@c,w
  2329  0641  00C4               	movwf	??_sprintf
  2330  0642  0744               	addwf	??_sprintf,w
  2331  0643  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2332  0644  0084               	movwf	4
  2333  0645  120A  118A  200D  120A  118A  	fcall	stringdir
  2334  064A  00C5               	movwf	??_sprintf+1
  2335  064B  120A  118A  200D  120A  118A  	fcall	stringdir
  2336  0650  00C6               	movwf	??_sprintf+2
  2337  0651  0846               	movf	??_sprintf+2,w
  2338  0652  024D               	subwf	sprintf@val+1,w
  2339  0653  1D03               	skipz
  2340  0654  2E57               	goto	u1115
  2341  0655  0845               	movf	??_sprintf+1,w
  2342  0656  024C               	subwf	sprintf@val,w
  2343  0657                     u1115:
  2344  0657  1803               	skipnc
  2345  0658  2E5A               	goto	u1111
  2346  0659  2E5B               	goto	u1110
  2347  065A                     u1111:
  2348  065A  2E5C               	goto	l1607
  2349  065B                     u1110:
  2350  065B  2E66               	goto	l1609
  2351  065C                     l1607:
  2352  065C  3001               	movlw	1
  2353  065D  00C4               	movwf	??_sprintf
  2354  065E  0844               	movf	??_sprintf,w
  2355  065F  07CF               	addwf	sprintf@c,f
  2356  0660  3005               	movlw	5
  2357  0661  064F               	xorwf	sprintf@c,w
  2358  0662  1D03               	btfss	3,2
  2359  0663  2E65               	goto	u1121
  2360  0664  2E66               	goto	u1120
  2361  0665                     u1121:
  2362  0665  2E40               	goto	l1603
  2363  0666                     u1120:
  2364  0666                     l1609:
  2365                           
  2366                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2367  0666  0848               	movf	sprintf@flag,w
  2368  0667  3903               	andlw	3
  2369  0668  1903               	btfsc	3,2
  2370  0669  2E6B               	goto	u1131
  2371  066A  2E6C               	goto	u1130
  2372  066B                     u1131:
  2373  066B  2E7D               	goto	l1617
  2374  066C                     u1130:
  2375  066C                     l1611:
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')),(++ccnt));
  2378  066C  302D               	movlw	45
  2379  066D  00C4               	movwf	??_sprintf
  2380  066E  084E               	movf	sprintf@sp,w
  2381  066F  0084               	movwf	4
  2382  0670  0844               	movf	??_sprintf,w
  2383  0671  1383               	bcf	3,7	;select IRP bank0
  2384  0672  0080               	movwf	0
  2385  0673                     l1613:
  2386  0673  3001               	movlw	1
  2387  0674  00C4               	movwf	??_sprintf
  2388  0675  0844               	movf	??_sprintf,w
  2389  0676  07CE               	addwf	sprintf@sp,f
  2390  0677                     l1615:
  2391  0677  3001               	movlw	1
  2392  0678  07C9               	addwf	sprintf@ccnt,f
  2393  0679  1803               	skipnc
  2394  067A  0ACA               	incf	sprintf@ccnt+1,f
  2395  067B  3000               	movlw	0
  2396  067C  07CA               	addwf	sprintf@ccnt+1,f
  2397  067D                     l1617:
  2398                           
  2399                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2400  067D  084F               	movf	sprintf@c,w
  2401  067E  00C4               	movwf	??_sprintf
  2402  067F  0844               	movf	??_sprintf,w
  2403  0680  00CB               	movwf	sprintf@prec
  2404                           
  2405                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2406  0681  2EC1               	goto	l1627
  2407  0682                     l1619:
  2408                           
  2409                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2410  0682  300A               	movlw	10
  2411  0683  00F8               	movwf	___lwmod@divisor
  2412  0684  3000               	movlw	0
  2413  0685  00F9               	movwf	___lwmod@divisor+1
  2414  0686  084B               	movf	sprintf@prec,w
  2415  0687  00C4               	movwf	??_sprintf
  2416  0688  0744               	addwf	??_sprintf,w
  2417  0689  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2418  068A  0084               	movwf	4
  2419  068B  120A  118A  200D  120A  118A  	fcall	stringdir
  2420  0690  00F0               	movwf	___lwdiv@divisor
  2421  0691  120A  118A  200D  120A  118A  	fcall	stringdir
  2422  0696  00F1               	movwf	___lwdiv@divisor+1
  2423  0697  084D               	movf	sprintf@val+1,w
  2424  0698  00F3               	movwf	___lwdiv@dividend+1
  2425  0699  084C               	movf	sprintf@val,w
  2426  069A  00F2               	movwf	___lwdiv@dividend
  2427  069B  120A  118A  2408  120A  118A  	fcall	___lwdiv
  2428  06A0  0871               	movf	?___lwdiv+1,w
  2429  06A1  00FB               	movwf	___lwmod@dividend+1
  2430  06A2  0870               	movf	?___lwdiv,w
  2431  06A3  00FA               	movwf	___lwmod@dividend
  2432  06A4  120A  118A  23CE  120A  118A  	fcall	___lwmod
  2433  06A9  0878               	movf	?___lwmod,w
  2434  06AA  3E30               	addlw	48
  2435  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  2436  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  2437  06AD  00C5               	movwf	??_sprintf+1
  2438  06AE  0845               	movf	??_sprintf+1,w
  2439  06AF  00CF               	movwf	sprintf@c
  2440  06B0                     l1621:
  2441                           
  2442                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)),
      +                          (++ccnt));
  2443  06B0  084F               	movf	sprintf@c,w
  2444  06B1  00C4               	movwf	??_sprintf
  2445  06B2  084E               	movf	sprintf@sp,w
  2446  06B3  0084               	movwf	4
  2447  06B4  0844               	movf	??_sprintf,w
  2448  06B5  1383               	bcf	3,7	;select IRP bank0
  2449  06B6  0080               	movwf	0
  2450  06B7                     l1623:
  2451  06B7  3001               	movlw	1
  2452  06B8  00C4               	movwf	??_sprintf
  2453  06B9  0844               	movf	??_sprintf,w
  2454  06BA  07CE               	addwf	sprintf@sp,f
  2455  06BB                     l1625:
  2456  06BB  3001               	movlw	1
  2457  06BC  07C9               	addwf	sprintf@ccnt,f
  2458  06BD  1803               	skipnc
  2459  06BE  0ACA               	incf	sprintf@ccnt+1,f
  2460  06BF  3000               	movlw	0
  2461  06C0  07CA               	addwf	sprintf@ccnt+1,f
  2462  06C1                     l1627:
  2463                           
  2464                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2465  06C1  30FF               	movlw	255
  2466  06C2  00C4               	movwf	??_sprintf
  2467  06C3  0844               	movf	??_sprintf,w
  2468  06C4  07CB               	addwf	sprintf@prec,f
  2469  06C5  0A4B               	incf	sprintf@prec,w
  2470  06C6  1D03               	btfss	3,2
  2471  06C7  2EC9               	goto	u1141
  2472  06C8  2ECA               	goto	u1140
  2473  06C9                     u1141:
  2474  06C9  2E82               	goto	l1619
  2475  06CA                     u1140:
  2476  06CA                     l1629:
  2477                           
  2478                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2479  06CA  3001               	movlw	1
  2480  06CB  07BD               	addwf	sprintf@f,f
  2481  06CC  30FF               	movlw	-1
  2482  06CD  073D               	addwf	sprintf@f,w
  2483  06CE  0084               	movwf	4
  2484  06CF  120A  118A  200D  120A  118A  	fcall	stringdir
  2485  06D4  00C4               	movwf	??_sprintf
  2486  06D5  0844               	movf	??_sprintf,w
  2487  06D6  00CF               	movwf	sprintf@c
  2488  06D7  084F               	movf	sprintf@c,w
  2489  06D8  1D03               	btfss	3,2
  2490  06D9  2EDB               	goto	u1151
  2491  06DA  2EDC               	goto	u1150
  2492  06DB                     u1151:
  2493  06DB  2DEF               	goto	l1573
  2494  06DC                     u1150:
  2495  06DC                     l1631:
  2496                           
  2497                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2498  06DC  084E               	movf	sprintf@sp,w
  2499  06DD  0084               	movwf	4
  2500  06DE  1383               	bcf	3,7	;select IRP bank0
  2501  06DF  0180               	clrf	0
  2502  06E0                     l1633:
  2503                           
  2504                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1566:  return ccn
      +                          t;
  2505  06E0  084A               	movf	sprintf@ccnt+1,w
  2506  06E1  00BE               	movwf	?_sprintf+1
  2507  06E2  0849               	movf	sprintf@ccnt,w
  2508  06E3  00BD               	movwf	?_sprintf
  2509  06E4                     l336:
  2510  06E4  0008               	return
  2511  06E5                     __end_of_sprintf:
  2512                           
  2513                           	psect	text7
  2514  03CE                     __ptext7:	
  2515 ;; *************** function ___lwmod *****************
  2516 ;; Defined at:
  2517 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwmod.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  divisor         2    8[COMMON] unsigned int 
  2520 ;;  dividend        2   10[COMMON] unsigned int 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  counter         1   13[COMMON] unsigned char 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  2    8[COMMON] unsigned int 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2532 ;;      Params:         4       0       0       0       0
  2533 ;;      Locals:         1       0       0       0       0
  2534 ;;      Temps:          1       0       0       0       0
  2535 ;;      Totals:         6       0       0       0       0
  2536 ;;Total ram usage:        6 bytes
  2537 ;; Hardware stack levels used: 1
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_sprintf
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545  03CE                     ___lwmod:	
  2546                           ;psect for function ___lwmod
  2547                           
  2548  03CE                     l1399:	
  2549                           ;incstack = 0
  2550                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2551                           
  2552  03CE  0878               	movf	___lwmod@divisor,w
  2553  03CF  0479               	iorwf	___lwmod@divisor+1,w
  2554  03D0  1903               	btfsc	3,2
  2555  03D1  2BD3               	goto	u741
  2556  03D2  2BD4               	goto	u740
  2557  03D3                     u741:
  2558  03D3  2C03               	goto	l1417
  2559  03D4                     u740:
  2560  03D4                     l1401:
  2561  03D4  01FD               	clrf	___lwmod@counter
  2562  03D5  0AFD               	incf	___lwmod@counter,f
  2563  03D6  2BE2               	goto	l1407
  2564  03D7                     l1403:
  2565  03D7  3001               	movlw	1
  2566  03D8                     u755:
  2567  03D8  1003               	clrc
  2568  03D9  0DF8               	rlf	___lwmod@divisor,f
  2569  03DA  0DF9               	rlf	___lwmod@divisor+1,f
  2570  03DB  3EFF               	addlw	-1
  2571  03DC  1D03               	skipz
  2572  03DD  2BD8               	goto	u755
  2573  03DE                     l1405:
  2574  03DE  3001               	movlw	1
  2575  03DF  00FC               	movwf	??___lwmod
  2576  03E0  087C               	movf	??___lwmod,w
  2577  03E1  07FD               	addwf	___lwmod@counter,f
  2578  03E2                     l1407:
  2579  03E2  1FF9               	btfss	___lwmod@divisor+1,7
  2580  03E3  2BE5               	goto	u761
  2581  03E4  2BE6               	goto	u760
  2582  03E5                     u761:
  2583  03E5  2BD7               	goto	l1403
  2584  03E6                     u760:
  2585  03E6                     l1409:
  2586  03E6  0879               	movf	___lwmod@divisor+1,w
  2587  03E7  027B               	subwf	___lwmod@dividend+1,w
  2588  03E8  1D03               	skipz
  2589  03E9  2BEC               	goto	u775
  2590  03EA  0878               	movf	___lwmod@divisor,w
  2591  03EB  027A               	subwf	___lwmod@dividend,w
  2592  03EC                     u775:
  2593  03EC  1C03               	skipc
  2594  03ED  2BEF               	goto	u771
  2595  03EE  2BF0               	goto	u770
  2596  03EF                     u771:
  2597  03EF  2BF6               	goto	l1413
  2598  03F0                     u770:
  2599  03F0                     l1411:
  2600  03F0  0878               	movf	___lwmod@divisor,w
  2601  03F1  02FA               	subwf	___lwmod@dividend,f
  2602  03F2  0879               	movf	___lwmod@divisor+1,w
  2603  03F3  1C03               	skipc
  2604  03F4  03FB               	decf	___lwmod@dividend+1,f
  2605  03F5  02FB               	subwf	___lwmod@dividend+1,f
  2606  03F6                     l1413:
  2607  03F6  3001               	movlw	1
  2608  03F7                     u785:
  2609  03F7  1003               	clrc
  2610  03F8  0CF9               	rrf	___lwmod@divisor+1,f
  2611  03F9  0CF8               	rrf	___lwmod@divisor,f
  2612  03FA  3EFF               	addlw	-1
  2613  03FB  1D03               	skipz
  2614  03FC  2BF7               	goto	u785
  2615  03FD                     l1415:
  2616  03FD  3001               	movlw	1
  2617  03FE  02FD               	subwf	___lwmod@counter,f
  2618  03FF  1D03               	btfss	3,2
  2619  0400  2C02               	goto	u791
  2620  0401  2C03               	goto	u790
  2621  0402                     u791:
  2622  0402  2BE6               	goto	l1409
  2623  0403                     u790:
  2624  0403                     l1417:
  2625  0403  087B               	movf	___lwmod@dividend+1,w
  2626  0404  00F9               	movwf	?___lwmod+1
  2627  0405  087A               	movf	___lwmod@dividend,w
  2628  0406  00F8               	movwf	?___lwmod
  2629  0407                     l622:
  2630  0407  0008               	return
  2631  0408                     __end_of___lwmod:
  2632                           
  2633                           	psect	text8
  2634  0408                     __ptext8:	
  2635 ;; *************** function ___lwdiv *****************
  2636 ;; Defined at:
  2637 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwdiv.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  divisor         2    0[COMMON] unsigned int 
  2640 ;;  dividend        2    2[COMMON] unsigned int 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  quotient        2    5[COMMON] unsigned int 
  2643 ;;  counter         1    7[COMMON] unsigned char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  2    0[COMMON] unsigned int 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, status,0
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2653 ;;      Params:         4       0       0       0       0
  2654 ;;      Locals:         3       0       0       0       0
  2655 ;;      Temps:          1       0       0       0       0
  2656 ;;      Totals:         8       0       0       0       0
  2657 ;;Total ram usage:        8 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_sprintf
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666  0408                     ___lwdiv:	
  2667                           ;psect for function ___lwdiv
  2668                           
  2669  0408                     l1373:	
  2670                           ;incstack = 0
  2671                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2672                           
  2673  0408  01F5               	clrf	___lwdiv@quotient
  2674  0409  01F6               	clrf	___lwdiv@quotient+1
  2675  040A                     l1375:
  2676  040A  0870               	movf	___lwdiv@divisor,w
  2677  040B  0471               	iorwf	___lwdiv@divisor+1,w
  2678  040C  1903               	btfsc	3,2
  2679  040D  2C0F               	goto	u671
  2680  040E  2C10               	goto	u670
  2681  040F                     u671:
  2682  040F  2C47               	goto	l1395
  2683  0410                     u670:
  2684  0410                     l1377:
  2685  0410  01F7               	clrf	___lwdiv@counter
  2686  0411  0AF7               	incf	___lwdiv@counter,f
  2687  0412  2C1E               	goto	l1383
  2688  0413                     l1379:
  2689  0413  3001               	movlw	1
  2690  0414                     u685:
  2691  0414  1003               	clrc
  2692  0415  0DF0               	rlf	___lwdiv@divisor,f
  2693  0416  0DF1               	rlf	___lwdiv@divisor+1,f
  2694  0417  3EFF               	addlw	-1
  2695  0418  1D03               	skipz
  2696  0419  2C14               	goto	u685
  2697  041A                     l1381:
  2698  041A  3001               	movlw	1
  2699  041B  00F4               	movwf	??___lwdiv
  2700  041C  0874               	movf	??___lwdiv,w
  2701  041D  07F7               	addwf	___lwdiv@counter,f
  2702  041E                     l1383:
  2703  041E  1FF1               	btfss	___lwdiv@divisor+1,7
  2704  041F  2C21               	goto	u691
  2705  0420  2C22               	goto	u690
  2706  0421                     u691:
  2707  0421  2C13               	goto	l1379
  2708  0422                     u690:
  2709  0422                     l1385:
  2710  0422  3001               	movlw	1
  2711  0423                     u705:
  2712  0423  1003               	clrc
  2713  0424  0DF5               	rlf	___lwdiv@quotient,f
  2714  0425  0DF6               	rlf	___lwdiv@quotient+1,f
  2715  0426  3EFF               	addlw	-1
  2716  0427  1D03               	skipz
  2717  0428  2C23               	goto	u705
  2718  0429  0871               	movf	___lwdiv@divisor+1,w
  2719  042A  0273               	subwf	___lwdiv@dividend+1,w
  2720  042B  1D03               	skipz
  2721  042C  2C2F               	goto	u715
  2722  042D  0870               	movf	___lwdiv@divisor,w
  2723  042E  0272               	subwf	___lwdiv@dividend,w
  2724  042F                     u715:
  2725  042F  1C03               	skipc
  2726  0430  2C32               	goto	u711
  2727  0431  2C33               	goto	u710
  2728  0432                     u711:
  2729  0432  2C3A               	goto	l1391
  2730  0433                     u710:
  2731  0433                     l1387:
  2732  0433  0870               	movf	___lwdiv@divisor,w
  2733  0434  02F2               	subwf	___lwdiv@dividend,f
  2734  0435  0871               	movf	___lwdiv@divisor+1,w
  2735  0436  1C03               	skipc
  2736  0437  03F3               	decf	___lwdiv@dividend+1,f
  2737  0438  02F3               	subwf	___lwdiv@dividend+1,f
  2738  0439                     l1389:
  2739  0439  1475               	bsf	___lwdiv@quotient,0
  2740  043A                     l1391:
  2741  043A  3001               	movlw	1
  2742  043B                     u725:
  2743  043B  1003               	clrc
  2744  043C  0CF1               	rrf	___lwdiv@divisor+1,f
  2745  043D  0CF0               	rrf	___lwdiv@divisor,f
  2746  043E  3EFF               	addlw	-1
  2747  043F  1D03               	skipz
  2748  0440  2C3B               	goto	u725
  2749  0441                     l1393:
  2750  0441  3001               	movlw	1
  2751  0442  02F7               	subwf	___lwdiv@counter,f
  2752  0443  1D03               	btfss	3,2
  2753  0444  2C46               	goto	u731
  2754  0445  2C47               	goto	u730
  2755  0446                     u731:
  2756  0446  2C22               	goto	l1385
  2757  0447                     u730:
  2758  0447                     l1395:
  2759  0447  0876               	movf	___lwdiv@quotient+1,w
  2760  0448  00F1               	movwf	?___lwdiv+1
  2761  0449  0875               	movf	___lwdiv@quotient,w
  2762  044A  00F0               	movwf	?___lwdiv
  2763  044B                     l612:
  2764  044B  0008               	return
  2765  044C                     __end_of___lwdiv:
  2766                           
  2767                           	psect	text9
  2768  0281                     __ptext9:	
  2769 ;; *************** function _monitoring_sensor *****************
  2770 ;; Defined at:
  2771 ;;		line 4 in file "sensor.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  alarm_activ     1    0[COMMON] unsigned char 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      unsigned char 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2785 ;;      Params:         0       0       0       0       0
  2786 ;;      Locals:         1       0       0       0       0
  2787 ;;      Temps:          0       0       0       0       0
  2788 ;;      Totals:         1       0       0       0       0
  2789 ;;Total ram usage:        1 bytes
  2790 ;; Hardware stack levels used: 1
  2791 ;; This function calls:
  2792 ;;		Nothing
  2793 ;; This function is called by:
  2794 ;;		_funcion_moni
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798  0281                     _monitoring_sensor:	
  2799                           ;psect for function _monitoring_sensor
  2800                           
  2801  0281                     l1539:	
  2802                           ;incstack = 0
  2803                           ; Regs used in _monitoring_sensor: [wreg+status,2]
  2804                           
  2805                           
  2806                           ;sensor.c: 5:     unsigned char alarm_activ=0;
  2807  0281  01F0               	clrf	monitoring_sensor@alarm_activ
  2808  0282                     l1541:
  2809                           
  2810                           ;sensor.c: 6:     if(RC1 == 0){
  2811  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2812  0283  1303               	bcf	3,6	;RP1=0, select bank0
  2813  0284  1887               	btfsc	7,1	;volatile
  2814  0285  2A87               	goto	u1031
  2815  0286  2A88               	goto	u1030
  2816  0287                     u1031:
  2817  0287  2A8A               	goto	l116
  2818  0288                     u1030:
  2819  0288                     l1543:
  2820                           
  2821                           ;sensor.c: 7:         alarm_activ=1;
  2822  0288  01F0               	clrf	monitoring_sensor@alarm_activ
  2823  0289  0AF0               	incf	monitoring_sensor@alarm_activ,f
  2824  028A                     l116:	
  2825                           ;sensor.c: 8:     }
  2826                           
  2827                           
  2828                           ;sensor.c: 9:     if(RC0 == 1){
  2829  028A  1C07               	btfss	7,0	;volatile
  2830  028B  2A8D               	goto	u1041
  2831  028C  2A8E               	goto	u1040
  2832  028D                     u1041:
  2833  028D  2A90               	goto	l117
  2834  028E                     u1040:
  2835  028E                     l1545:
  2836                           
  2837                           ;sensor.c: 10:         alarm_activ=1;
  2838  028E  01F0               	clrf	monitoring_sensor@alarm_activ
  2839  028F  0AF0               	incf	monitoring_sensor@alarm_activ,f
  2840  0290                     l117:	
  2841                           ;sensor.c: 11:     }
  2842                           
  2843                           
  2844                           ;sensor.c: 12:     if(RC2 == 1){
  2845  0290  1D07               	btfss	7,2	;volatile
  2846  0291  2A93               	goto	u1051
  2847  0292  2A94               	goto	u1050
  2848  0293                     u1051:
  2849  0293  2A96               	goto	l1549
  2850  0294                     u1050:
  2851  0294                     l1547:
  2852                           
  2853                           ;sensor.c: 13:         alarm_activ=1;
  2854  0294  01F0               	clrf	monitoring_sensor@alarm_activ
  2855  0295  0AF0               	incf	monitoring_sensor@alarm_activ,f
  2856  0296                     l1549:
  2857                           
  2858                           ;sensor.c: 15:     return alarm_activ;
  2859  0296  0870               	movf	monitoring_sensor@alarm_activ,w
  2860  0297                     l119:
  2861  0297  0008               	return
  2862  0298                     __end_of_monitoring_sensor:
  2863                           
  2864                           	psect	text10
  2865  0331                     __ptext10:	
  2866 ;; *************** function _funcion_block *****************
  2867 ;; Defined at:
  2868 ;;		line 149 in file "main.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;		None
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;		None
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2882 ;;      Params:         0       0       0       0       0
  2883 ;;      Locals:         0       0       0       0       0
  2884 ;;      Temps:          3       0       0       0       0
  2885 ;;      Totals:         3       0       0       0       0
  2886 ;;Total ram usage:        3 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; Hardware stack levels required when called: 3
  2889 ;; This function calls:
  2890 ;;		_LCD_Clear
  2891 ;;		_LCD_String_xy
  2892 ;; This function is called by:
  2893 ;;		_main
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897  0331                     _funcion_block:	
  2898                           ;psect for function _funcion_block
  2899                           
  2900  0331                     l1719:	
  2901                           ;incstack = 0
  2902                           ; Regs used in _funcion_block: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2903                           
  2904                           
  2905                           ;main.c: 150:             LCD_Clear();
  2906  0331  120A  118A  224E  120A  118A  	fcall	_LCD_Clear
  2907  0336                     l1721:
  2908                           
  2909                           ;main.c: 151:             LCD_String_xy(0,0,"bloqueado");
  2910  0336  01F5               	clrf	LCD_String_xy@pos
  2911  0337  304B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2912  0338  00F6               	movwf	LCD_String_xy@msg
  2913  0339  3080               	movlw	128
  2914  033A  00F7               	movwf	LCD_String_xy@msg+1
  2915  033B  3000               	movlw	0
  2916  033C  120A  118A  2307  120A  118A  	fcall	_LCD_String_xy
  2917  0341                     l1723:
  2918                           
  2919                           ;main.c: 152:             _delay((unsigned long)((2000)*(8000000/4000.0)));
  2920  0341  3015               	movlw	21
  2921  0342  00FD               	movwf	??_funcion_block+2
  2922  0343  304B               	movlw	75
  2923  0344  00FC               	movwf	??_funcion_block+1
  2924  0345  30BE               	movlw	190
  2925  0346  00FB               	movwf	??_funcion_block
  2926  0347                     u1347:
  2927  0347  0BFB               	decfsz	??_funcion_block,f
  2928  0348  2B47               	goto	u1347
  2929  0349  0BFC               	decfsz	??_funcion_block+1,f
  2930  034A  2B47               	goto	u1347
  2931  034B  0BFD               	decfsz	??_funcion_block+2,f
  2932  034C  2B47               	goto	u1347
  2933  034D  0000               	nop
  2934  034E                     l1725:
  2935                           
  2936                           ;main.c: 153:             RE1 = 1;
  2937  034E  1283               	bcf	3,5	;RP0=0, select bank0
  2938  034F  1303               	bcf	3,6	;RP1=0, select bank0
  2939  0350  1489               	bsf	9,1	;volatile
  2940  0351                     l1727:
  2941                           
  2942                           ;main.c: 155:         _delay((unsigned long)((2000)*(8000000/4000.0)));
  2943  0351  3015               	movlw	21
  2944  0352  00FD               	movwf	??_funcion_block+2
  2945  0353  304B               	movlw	75
  2946  0354  00FC               	movwf	??_funcion_block+1
  2947  0355  30BE               	movlw	190
  2948  0356  00FB               	movwf	??_funcion_block
  2949  0357                     u1357:
  2950  0357  0BFB               	decfsz	??_funcion_block,f
  2951  0358  2B57               	goto	u1357
  2952  0359  0BFC               	decfsz	??_funcion_block+1,f
  2953  035A  2B57               	goto	u1357
  2954  035B  0BFD               	decfsz	??_funcion_block+2,f
  2955  035C  2B57               	goto	u1357
  2956  035D  0000               	nop
  2957  035E                     l1729:
  2958                           
  2959                           ;main.c: 156:         estado = seguridad;
  2960  035E  1283               	bcf	3,5	;RP0=0, select bank0
  2961  035F  1303               	bcf	3,6	;RP1=0, select bank0
  2962  0360  01A6               	clrf	_estado
  2963  0361                     l220:
  2964  0361  0008               	return
  2965  0362                     __end_of_funcion_block:
  2966                           
  2967                           	psect	text11
  2968  0307                     __ptext11:	
  2969 ;; *************** function _LCD_String_xy *****************
  2970 ;; Defined at:
  2971 ;;		line 114 in file "lcd.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  row             1    wreg     unsigned char 
  2974 ;;  pos             1    5[COMMON] unsigned char 
  2975 ;;  msg             2    6[COMMON] PTR const unsigned char 
  2976 ;;		 -> STR_5(10), buffer(17), STR_3(17), STR_2(11), 
  2977 ;;		 -> STR_1(10), 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  row             1    9[COMMON] unsigned char 
  2980 ;;  location        1   10[COMMON] unsigned char 
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1    wreg      void 
  2983 ;; Registers used:
  2984 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2990 ;;      Params:         3       0       0       0       0
  2991 ;;      Locals:         2       0       0       0       0
  2992 ;;      Temps:          1       0       0       0       0
  2993 ;;      Totals:         6       0       0       0       0
  2994 ;;Total ram usage:        6 bytes
  2995 ;; Hardware stack levels used: 1
  2996 ;; Hardware stack levels required when called: 2
  2997 ;; This function calls:
  2998 ;;		_LCD_Command
  2999 ;;		_LCD_String
  3000 ;; This function is called by:
  3001 ;;		_funcion_seg
  3002 ;;		_funcion_moni
  3003 ;;		_funcion_block
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007  0307                     _LCD_String_xy:	
  3008                           ;psect for function _LCD_String_xy
  3009                           
  3010                           
  3011                           ;incstack = 0
  3012                           ; Regs used in _LCD_String_xy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3013                           ;LCD_String_xy@row stored from wreg
  3014  0307  00F9               	movwf	LCD_String_xy@row
  3015  0308                     l1521:
  3016  0308                     l1523:
  3017                           
  3018                           ;lcd.c: 117:     if(row<=1)
  3019  0308  3002               	movlw	2
  3020  0309  0279               	subwf	LCD_String_xy@row,w
  3021  030A  1803               	skipnc
  3022  030B  2B0D               	goto	u1021
  3023  030C  2B0E               	goto	u1020
  3024  030D                     u1021:
  3025  030D  2B1B               	goto	l1529
  3026  030E                     u1020:
  3027  030E                     l1525:
  3028                           
  3029                           ;lcd.c: 118:     {;lcd.c: 119:         location=(0x80) | ((pos) & 0x0f);
  3030  030E  0875               	movf	LCD_String_xy@pos,w
  3031  030F  390F               	andlw	15
  3032  0310  3880               	iorlw	128
  3033  0311  00F8               	movwf	??_LCD_String_xy
  3034  0312  0878               	movf	??_LCD_String_xy,w
  3035  0313  00FA               	movwf	LCD_String_xy@location
  3036  0314                     l1527:
  3037                           
  3038                           ;lcd.c: 120:         LCD_Command(location);
  3039  0314  087A               	movf	LCD_String_xy@location,w
  3040  0315  120A  118A  2362  120A  118A  	fcall	_LCD_Command
  3041                           
  3042                           ;lcd.c: 121:     }
  3043  031A  2B27               	goto	l1533
  3044  031B                     l1529:
  3045                           
  3046                           ;lcd.c: 123:     {;lcd.c: 124:         location=(0xC0) | ((pos) & 0x0f);
  3047  031B  0875               	movf	LCD_String_xy@pos,w
  3048  031C  390F               	andlw	15
  3049  031D  38C0               	iorlw	192
  3050  031E  00F8               	movwf	??_LCD_String_xy
  3051  031F  0878               	movf	??_LCD_String_xy,w
  3052  0320  00FA               	movwf	LCD_String_xy@location
  3053  0321                     l1531:
  3054                           
  3055                           ;lcd.c: 125:         LCD_Command(location);
  3056  0321  087A               	movf	LCD_String_xy@location,w
  3057  0322  120A  118A  2362  120A  118A  	fcall	_LCD_Command
  3058  0327                     l1533:
  3059                           
  3060                           ;lcd.c: 127:     LCD_String(msg);
  3061  0327  0876               	movf	LCD_String_xy@msg,w
  3062  0328  00F3               	movwf	LCD_String@msg
  3063  0329  0877               	movf	LCD_String_xy@msg+1,w
  3064  032A  00F4               	movwf	LCD_String@msg+1
  3065  032B  120A  118A  22B7  120A  118A  	fcall	_LCD_String
  3066  0330                     l104:
  3067  0330  0008               	return
  3068  0331                     __end_of_LCD_String_xy:
  3069                           
  3070                           	psect	text12
  3071  02B7                     __ptext12:	
  3072 ;; *************** function _LCD_String *****************
  3073 ;; Defined at:
  3074 ;;		line 105 in file "lcd.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  msg             2    3[COMMON] PTR const unsigned char 
  3077 ;;		 -> STR_5(10), buffer(17), STR_3(17), STR_2(11), 
  3078 ;;		 -> STR_1(10), 
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;		None
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  1    wreg      void 
  3083 ;; Registers used:
  3084 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3090 ;;      Params:         2       0       0       0       0
  3091 ;;      Locals:         0       0       0       0       0
  3092 ;;      Temps:          0       0       0       0       0
  3093 ;;      Totals:         2       0       0       0       0
  3094 ;;Total ram usage:        2 bytes
  3095 ;; Hardware stack levels used: 1
  3096 ;; Hardware stack levels required when called: 1
  3097 ;; This function calls:
  3098 ;;		_LCD_Char
  3099 ;; This function is called by:
  3100 ;;		_LCD_String_xy
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104  02B7                     _LCD_String:	
  3105                           ;psect for function _LCD_String
  3106                           
  3107  02B7                     l1365:	
  3108                           ;incstack = 0
  3109                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3110                           
  3111                           
  3112                           ;lcd.c: 105: void LCD_String(const char *msg);lcd.c: 106: {;lcd.c: 107: while((*msg)!=0)
  3113  02B7  2ACC               	goto	l1371
  3114  02B8                     l1367:
  3115                           
  3116                           ;lcd.c: 108: {;lcd.c: 109:  LCD_Char(*msg);
  3117  02B8  0874               	movf	LCD_String@msg+1,w
  3118  02B9  00FF               	movwf	btemp+1
  3119  02BA  0873               	movf	LCD_String@msg,w
  3120  02BB  0084               	movwf	4
  3121  02BC  120A  118A  2003  120A  118A  	fcall	stringtab
  3122  02C1  120A  118A  2398  120A  118A  	fcall	_LCD_Char
  3123  02C6                     l1369:
  3124                           
  3125                           ;lcd.c: 110:  msg++;
  3126  02C6  3001               	movlw	1
  3127  02C7  07F3               	addwf	LCD_String@msg,f
  3128  02C8  1803               	skipnc
  3129  02C9  0AF4               	incf	LCD_String@msg+1,f
  3130  02CA  3000               	movlw	0
  3131  02CB  07F4               	addwf	LCD_String@msg+1,f
  3132  02CC                     l1371:
  3133                           
  3134                           ;lcd.c: 107: while((*msg)!=0)
  3135  02CC  0874               	movf	LCD_String@msg+1,w
  3136  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  3137  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  3138  02CF  00FF               	movwf	btemp+1
  3139  02D0  0873               	movf	LCD_String@msg,w
  3140  02D1  0084               	movwf	4
  3141  02D2  120A  118A  2003  120A  118A  	fcall	stringtab
  3142  02D7  3A00               	xorlw	0
  3143  02D8  1D03               	skipz
  3144  02D9  2ADB               	goto	u661
  3145  02DA  2ADC               	goto	u660
  3146  02DB                     u661:
  3147  02DB  2AB8               	goto	l1367
  3148  02DC                     u660:
  3149  02DC                     l99:
  3150  02DC  0008               	return
  3151  02DD                     __end_of_LCD_String:
  3152                           
  3153                           	psect	text13
  3154  0398                     __ptext13:	
  3155 ;; *************** function _LCD_Char *****************
  3156 ;; Defined at:
  3157 ;;		line 90 in file "lcd.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  dat             1    wreg     unsigned char 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  dat             1    2[COMMON] unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, status,2, status,0
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3171 ;;      Params:         0       0       0       0       0
  3172 ;;      Locals:         1       0       0       0       0
  3173 ;;      Temps:          2       0       0       0       0
  3174 ;;      Totals:         3       0       0       0       0
  3175 ;;Total ram usage:        3 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_LCD_String
  3181 ;;		_funcion_seg
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185  0398                     _LCD_Char:	
  3186                           ;psect for function _LCD_Char
  3187                           
  3188                           
  3189                           ;incstack = 0
  3190                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  3191                           ;LCD_Char@dat stored from wreg
  3192  0398  00F2               	movwf	LCD_Char@dat
  3193  0399                     l1325:
  3194                           
  3195                           ;lcd.c: 90: void LCD_Char(unsigned char dat);lcd.c: 91: {;lcd.c: 92: PORTD = (PORTD & 0x
      +                          0f) | (0xF0 & dat);
  3196  0399  30F0               	movlw	240
  3197  039A  0572               	andwf	LCD_Char@dat,w
  3198  039B  00F0               	movwf	??_LCD_Char
  3199  039C  1283               	bcf	3,5	;RP0=0, select bank0
  3200  039D  1303               	bcf	3,6	;RP1=0, select bank0
  3201  039E  0808               	movf	8,w	;volatile
  3202  039F  390F               	andlw	15
  3203  03A0  0470               	iorwf	??_LCD_Char,w
  3204  03A1  0088               	movwf	8	;volatile
  3205  03A2                     l1327:
  3206                           
  3207                           ;lcd.c: 93: PORTDbits.RD0 = 1;
  3208  03A2  1408               	bsf	8,0	;volatile
  3209  03A3                     l1329:
  3210                           
  3211                           ;lcd.c: 94: PORTDbits.RD1 = 1;
  3212  03A3  1488               	bsf	8,1	;volatile
  3213  03A4                     l1331:
  3214                           
  3215                           ;lcd.c: 95: __nop();
  3216  03A4  0000               	nop
  3217  03A5                     l1333:
  3218                           
  3219                           ;lcd.c: 96: PORTDbits.RD1 = 0;
  3220  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  3221  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  3222  03A7  1088               	bcf	8,1	;volatile
  3223  03A8                     l1335:
  3224                           
  3225                           ;lcd.c: 97: _delay((unsigned long)((1)*(8000000/4000.0)));
  3226  03A8  3003               	movlw	3
  3227  03A9  00F1               	movwf	??_LCD_Char+1
  3228  03AA  3097               	movlw	151
  3229  03AB  00F0               	movwf	??_LCD_Char
  3230  03AC                     u1367:
  3231  03AC  0BF0               	decfsz	??_LCD_Char,f
  3232  03AD  2BAC               	goto	u1367
  3233  03AE  0BF1               	decfsz	??_LCD_Char+1,f
  3234  03AF  2BAC               	goto	u1367
  3235  03B0  2BB1               	nop2
  3236  03B1                     l1337:
  3237                           
  3238                           ;lcd.c: 98:     PORTD = (unsigned char)((PORTD & 0x0f) | (dat<<4));
  3239  03B1  0872               	movf	LCD_Char@dat,w
  3240  03B2  00F0               	movwf	??_LCD_Char
  3241  03B3  3004               	movlw	4
  3242  03B4                     u645:
  3243  03B4  1003               	clrc
  3244  03B5  0DF0               	rlf	??_LCD_Char,f
  3245  03B6  3EFF               	addlw	-1
  3246  03B7  1D03               	skipz
  3247  03B8  2BB4               	goto	u645
  3248  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  3249  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  3250  03BB  0808               	movf	8,w	;volatile
  3251  03BC  390F               	andlw	15
  3252  03BD  0470               	iorwf	??_LCD_Char,w
  3253  03BE  0088               	movwf	8	;volatile
  3254  03BF                     l1339:
  3255                           
  3256                           ;lcd.c: 99: PORTDbits.RD1 = 1;
  3257  03BF  1488               	bsf	8,1	;volatile
  3258  03C0                     l1341:
  3259                           
  3260                           ;lcd.c: 100: __nop();
  3261  03C0  0000               	nop
  3262  03C1                     l1343:
  3263                           
  3264                           ;lcd.c: 101: PORTDbits.RD1 = 0;
  3265  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  3266  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  3267  03C3  1088               	bcf	8,1	;volatile
  3268                           
  3269                           ;lcd.c: 102: _delay((unsigned long)((3)*(8000000/4000.0)));
  3270  03C4  3008               	movlw	8
  3271  03C5  00F1               	movwf	??_LCD_Char+1
  3272  03C6  30C9               	movlw	201
  3273  03C7  00F0               	movwf	??_LCD_Char
  3274  03C8                     u1377:
  3275  03C8  0BF0               	decfsz	??_LCD_Char,f
  3276  03C9  2BC8               	goto	u1377
  3277  03CA  0BF1               	decfsz	??_LCD_Char+1,f
  3278  03CB  2BC8               	goto	u1377
  3279  03CC  2BCD               	nop2
  3280  03CD                     l93:
  3281  03CD  0008               	return
  3282  03CE                     __end_of_LCD_Char:
  3283                           
  3284                           	psect	text14
  3285  024E                     __ptext14:	
  3286 ;; *************** function _LCD_Clear *****************
  3287 ;; Defined at:
  3288 ;;		line 142 in file "lcd.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;		None
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;		None
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  1    wreg      void 
  3295 ;; Registers used:
  3296 ;;		wreg, status,2, status,0, pclath, cstack
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3302 ;;      Params:         0       0       0       0       0
  3303 ;;      Locals:         0       0       0       0       0
  3304 ;;      Temps:          2       0       0       0       0
  3305 ;;      Totals:         2       0       0       0       0
  3306 ;;Total ram usage:        2 bytes
  3307 ;; Hardware stack levels used: 1
  3308 ;; Hardware stack levels required when called: 1
  3309 ;; This function calls:
  3310 ;;		_LCD_Command
  3311 ;; This function is called by:
  3312 ;;		_funcion_seg
  3313 ;;		_funcion_block
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317  024E                     _LCD_Clear:	
  3318                           ;psect for function _LCD_Clear
  3319                           
  3320  024E                     l1535:	
  3321                           ;incstack = 0
  3322                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  3323                           
  3324                           
  3325                           ;lcd.c: 144:     LCD_Command(0x01);
  3326  024E  3001               	movlw	1
  3327  024F  120A  118A  2362  120A  118A  	fcall	_LCD_Command
  3328  0254                     l1537:
  3329                           
  3330                           ;lcd.c: 145:     _delay((unsigned long)((3)*(8000000/4000.0)));
  3331  0254  3008               	movlw	8
  3332  0255  00F4               	movwf	??_LCD_Clear+1
  3333  0256  30C9               	movlw	201
  3334  0257  00F3               	movwf	??_LCD_Clear
  3335  0258                     u1387:
  3336  0258  0BF3               	decfsz	??_LCD_Clear,f
  3337  0259  2A58               	goto	u1387
  3338  025A  0BF4               	decfsz	??_LCD_Clear+1,f
  3339  025B  2A58               	goto	u1387
  3340  025C  2A5D               	nop2
  3341  025D                     l107:
  3342  025D  0008               	return
  3343  025E                     __end_of_LCD_Clear:
  3344                           
  3345                           	psect	text15
  3346  0298                     __ptext15:	
  3347 ;; *************** function _funcion_alarma *****************
  3348 ;; Defined at:
  3349 ;;		line 160 in file "main.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;		None
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;		None
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  1    wreg      void 
  3356 ;; Registers used:
  3357 ;;		wreg, status,2, status,0
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3363 ;;      Params:         0       0       0       0       0
  3364 ;;      Locals:         0       0       0       0       0
  3365 ;;      Temps:          3       0       0       0       0
  3366 ;;      Totals:         3       0       0       0       0
  3367 ;;Total ram usage:        3 bytes
  3368 ;; Hardware stack levels used: 1
  3369 ;; This function calls:
  3370 ;;		Nothing
  3371 ;; This function is called by:
  3372 ;;		_main
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376  0298                     _funcion_alarma:	
  3377                           ;psect for function _funcion_alarma
  3378                           
  3379  0298                     l1731:	
  3380                           ;incstack = 0
  3381                           ; Regs used in _funcion_alarma: [wreg+status,2+status,0]
  3382                           
  3383                           
  3384                           ;main.c: 162:     while(tiempo < 5){
  3385  0298  2AAE               	goto	l1739
  3386  0299                     l224:
  3387                           
  3388                           ;main.c: 163:         RE1 = 1;
  3389  0299  1489               	bsf	9,1	;volatile
  3390  029A                     l1733:
  3391                           
  3392                           ;main.c: 164:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  3393  029A  300B               	movlw	11
  3394  029B  00F2               	movwf	??_funcion_alarma+2
  3395  029C  3026               	movlw	38
  3396  029D  00F1               	movwf	??_funcion_alarma+1
  3397  029E  305D               	movlw	93
  3398  029F  00F0               	movwf	??_funcion_alarma
  3399  02A0                     u1397:
  3400  02A0  0BF0               	decfsz	??_funcion_alarma,f
  3401  02A1  2AA0               	goto	u1397
  3402  02A2  0BF1               	decfsz	??_funcion_alarma+1,f
  3403  02A3  2AA0               	goto	u1397
  3404  02A4  0BF2               	decfsz	??_funcion_alarma+2,f
  3405  02A5  2AA0               	goto	u1397
  3406  02A6  2AA7               	nop2
  3407  02A7                     l1735:
  3408                           
  3409                           ;main.c: 165:         RE1 = 0;
  3410  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  3411  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  3412  02A9  1089               	bcf	9,1	;volatile
  3413  02AA                     l1737:
  3414                           
  3415                           ;main.c: 166:         tiempo++;
  3416  02AA  3001               	movlw	1
  3417  02AB  00F0               	movwf	??_funcion_alarma
  3418  02AC  0870               	movf	??_funcion_alarma,w
  3419  02AD  07A3               	addwf	_tiempo,f
  3420  02AE                     l1739:
  3421                           
  3422                           ;main.c: 162:     while(tiempo < 5){
  3423  02AE  3005               	movlw	5
  3424  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  3425  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  3426  02B1  0223               	subwf	_tiempo,w
  3427  02B2  1C03               	skipc
  3428  02B3  2AB5               	goto	u1221
  3429  02B4  2AB6               	goto	u1220
  3430  02B5                     u1221:
  3431  02B5  2A99               	goto	l224
  3432  02B6                     u1220:
  3433  02B6                     l226:
  3434  02B6  0008               	return
  3435  02B7                     __end_of_funcion_alarma:
  3436                           
  3437                           	psect	text16
  3438  02DD                     __ptext16:	
  3439 ;; *************** function _LCD_Init *****************
  3440 ;; Defined at:
  3441 ;;		line 38 in file "lcd.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;		None
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;		None
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      void 
  3448 ;; Registers used:
  3449 ;;		wreg, status,2, status,0, pclath, cstack
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3455 ;;      Params:         0       0       0       0       0
  3456 ;;      Locals:         0       0       0       0       0
  3457 ;;      Temps:          2       0       0       0       0
  3458 ;;      Totals:         2       0       0       0       0
  3459 ;;Total ram usage:        2 bytes
  3460 ;; Hardware stack levels used: 1
  3461 ;; Hardware stack levels required when called: 1
  3462 ;; This function calls:
  3463 ;;		_LCD_Command
  3464 ;; This function is called by:
  3465 ;;		_main
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469  02DD                     _LCD_Init:	
  3470                           ;psect for function _LCD_Init
  3471                           
  3472  02DD                     l1647:	
  3473                           ;incstack = 0
  3474                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3475                           
  3476                           
  3477                           ;lcd.c: 39:     TRISD = 0;
  3478  02DD  1683               	bsf	3,5	;RP0=1, select bank1
  3479  02DE  1303               	bcf	3,6	;RP1=0, select bank1
  3480  02DF  0188               	clrf	8	;volatile
  3481  02E0                     l1649:
  3482                           
  3483                           ;lcd.c: 40:     _delay((unsigned long)((15)*(8000000/4000.0)));
  3484  02E0  3027               	movlw	39
  3485  02E1  00F4               	movwf	??_LCD_Init+1
  3486  02E2  30F5               	movlw	245
  3487  02E3  00F3               	movwf	??_LCD_Init
  3488  02E4                     u1407:
  3489  02E4  0BF3               	decfsz	??_LCD_Init,f
  3490  02E5  2AE4               	goto	u1407
  3491  02E6  0BF4               	decfsz	??_LCD_Init+1,f
  3492  02E7  2AE4               	goto	u1407
  3493  02E8                     l1651:
  3494                           
  3495                           ;lcd.c: 41:     LCD_Command(0x02);
  3496  02E8  3002               	movlw	2
  3497  02E9  120A  118A  2362  120A  118A  	fcall	_LCD_Command
  3498  02EE                     l1653:
  3499                           
  3500                           ;lcd.c: 42:     LCD_Command(0x28);
  3501  02EE  3028               	movlw	40
  3502  02EF  120A  118A  2362  120A  118A  	fcall	_LCD_Command
  3503  02F4                     l1655:
  3504                           
  3505                           ;lcd.c: 43:     LCD_Command(0x01);
  3506  02F4  3001               	movlw	1
  3507  02F5  120A  118A  2362  120A  118A  	fcall	_LCD_Command
  3508  02FA                     l1657:
  3509                           
  3510                           ;lcd.c: 44:     LCD_Command(0x0c);
  3511  02FA  300C               	movlw	12
  3512  02FB  120A  118A  2362  120A  118A  	fcall	_LCD_Command
  3513  0300                     l1659:
  3514                           
  3515                           ;lcd.c: 45:     LCD_Command(0x06);
  3516  0300  3006               	movlw	6
  3517  0301  120A  118A  2362  120A  118A  	fcall	_LCD_Command
  3518  0306                     l87:
  3519  0306  0008               	return
  3520  0307                     __end_of_LCD_Init:
  3521                           
  3522                           	psect	text17
  3523  0362                     __ptext17:	
  3524 ;; *************** function _LCD_Command *****************
  3525 ;; Defined at:
  3526 ;;		line 61 in file "lcd.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  cmd             1    wreg     unsigned char 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;  cmd             1    2[COMMON] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      void 
  3533 ;; Registers used:
  3534 ;;		wreg, status,2, status,0
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3540 ;;      Params:         0       0       0       0       0
  3541 ;;      Locals:         1       0       0       0       0
  3542 ;;      Temps:          2       0       0       0       0
  3543 ;;      Totals:         3       0       0       0       0
  3544 ;;Total ram usage:        3 bytes
  3545 ;; Hardware stack levels used: 1
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_LCD_Init
  3550 ;;		_LCD_String_xy
  3551 ;;		_LCD_Clear
  3552 ;;		_funcion_seg
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556  0362                     _LCD_Command:	
  3557                           ;psect for function _LCD_Command
  3558                           
  3559                           
  3560                           ;incstack = 0
  3561                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  3562                           ;LCD_Command@cmd stored from wreg
  3563  0362  00F2               	movwf	LCD_Command@cmd
  3564  0363                     l1345:
  3565                           
  3566                           ;lcd.c: 61: void LCD_Command(unsigned char cmd );lcd.c: 62: {;lcd.c: 63: PORTD = (PORTD 
      +                          & 0x0f) |(0xF0 & cmd);
  3567  0363  30F0               	movlw	240
  3568  0364  0572               	andwf	LCD_Command@cmd,w
  3569  0365  00F0               	movwf	??_LCD_Command
  3570  0366  1283               	bcf	3,5	;RP0=0, select bank0
  3571  0367  1303               	bcf	3,6	;RP1=0, select bank0
  3572  0368  0808               	movf	8,w	;volatile
  3573  0369  390F               	andlw	15
  3574  036A  0470               	iorwf	??_LCD_Command,w
  3575  036B  0088               	movwf	8	;volatile
  3576  036C                     l1347:
  3577                           
  3578                           ;lcd.c: 64: PORTDbits.RD0 = 0;
  3579  036C  1008               	bcf	8,0	;volatile
  3580  036D                     l1349:
  3581                           
  3582                           ;lcd.c: 65: PORTDbits.RD1 = 1;
  3583  036D  1488               	bsf	8,1	;volatile
  3584  036E                     l1351:
  3585                           
  3586                           ;lcd.c: 66: __nop();
  3587  036E  0000               	nop
  3588  036F                     l1353:
  3589                           
  3590                           ;lcd.c: 67: PORTDbits.RD1 = 0;
  3591  036F  1283               	bcf	3,5	;RP0=0, select bank0
  3592  0370  1303               	bcf	3,6	;RP1=0, select bank0
  3593  0371  1088               	bcf	8,1	;volatile
  3594  0372                     l1355:
  3595                           
  3596                           ;lcd.c: 68: _delay((unsigned long)((1)*(8000000/4000.0)));
  3597  0372  3003               	movlw	3
  3598  0373  00F1               	movwf	??_LCD_Command+1
  3599  0374  3097               	movlw	151
  3600  0375  00F0               	movwf	??_LCD_Command
  3601  0376                     u1417:
  3602  0376  0BF0               	decfsz	??_LCD_Command,f
  3603  0377  2B76               	goto	u1417
  3604  0378  0BF1               	decfsz	??_LCD_Command+1,f
  3605  0379  2B76               	goto	u1417
  3606  037A  2B7B               	nop2
  3607  037B                     l1357:
  3608                           
  3609                           ;lcd.c: 69:     PORTD = (unsigned char)((PORTD & 0x0f) | (cmd<<4));
  3610  037B  0872               	movf	LCD_Command@cmd,w
  3611  037C  00F0               	movwf	??_LCD_Command
  3612  037D  3004               	movlw	4
  3613  037E                     u655:
  3614  037E  1003               	clrc
  3615  037F  0DF0               	rlf	??_LCD_Command,f
  3616  0380  3EFF               	addlw	-1
  3617  0381  1D03               	skipz
  3618  0382  2B7E               	goto	u655
  3619  0383  1283               	bcf	3,5	;RP0=0, select bank0
  3620  0384  1303               	bcf	3,6	;RP1=0, select bank0
  3621  0385  0808               	movf	8,w	;volatile
  3622  0386  390F               	andlw	15
  3623  0387  0470               	iorwf	??_LCD_Command,w
  3624  0388  0088               	movwf	8	;volatile
  3625  0389                     l1359:
  3626                           
  3627                           ;lcd.c: 70: PORTDbits.RD1 = 1;
  3628  0389  1488               	bsf	8,1	;volatile
  3629  038A                     l1361:
  3630                           
  3631                           ;lcd.c: 71: __nop();
  3632  038A  0000               	nop
  3633  038B                     l1363:
  3634                           
  3635                           ;lcd.c: 72: PORTDbits.RD1 = 0;
  3636  038B  1283               	bcf	3,5	;RP0=0, select bank0
  3637  038C  1303               	bcf	3,6	;RP1=0, select bank0
  3638  038D  1088               	bcf	8,1	;volatile
  3639                           
  3640                           ;lcd.c: 73: _delay((unsigned long)((3)*(8000000/4000.0)));
  3641  038E  3008               	movlw	8
  3642  038F  00F1               	movwf	??_LCD_Command+1
  3643  0390  30C9               	movlw	201
  3644  0391  00F0               	movwf	??_LCD_Command
  3645  0392                     u1427:
  3646  0392  0BF0               	decfsz	??_LCD_Command,f
  3647  0393  2B92               	goto	u1427
  3648  0394  0BF1               	decfsz	??_LCD_Command+1,f
  3649  0395  2B92               	goto	u1427
  3650  0396  2B97               	nop2
  3651  0397                     l90:
  3652  0397  0008               	return
  3653  0398                     __end_of_LCD_Command:
  3654  007E                     btemp	set	126	;btemp
  3655  007E                     wtemp0	set	126
  3656                           
  3657                           	psect	config
  3658                           
  3659                           ;Config register CONFIG1 @ 0x2007
  3660                           ;	Oscillator Selection bits
  3661                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  3662                           ;	Watchdog Timer Enable bit
  3663                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3664                           ;	Power-up Timer Enable bit
  3665                           ;	PWRTE = OFF, PWRT disabled
  3666                           ;	RE3/MCLR pin function select bit
  3667                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3668                           ;	Code Protection bit
  3669                           ;	CP = OFF, Program memory code protection is disabled
  3670                           ;	Data Code Protection bit
  3671                           ;	CPD = OFF, Data memory code protection is disabled
  3672                           ;	Brown Out Reset Selection bits
  3673                           ;	BOREN = OFF, BOR disabled
  3674                           ;	Internal External Switchover bit
  3675                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3676                           ;	Fail-Safe Clock Monitor Enabled bit
  3677                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3678                           ;	Low Voltage Programming Enable bit
  3679                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3680                           ;	In-Circuit Debugger Mode bit
  3681                           ;	DEBUG = 0x1, unprogrammed default
  3682  2007                     	org	8199
  3683  2007  20D5               	dw	8405
  3684                           
  3685                           ;Config register CONFIG2 @ 0x2008
  3686                           ;	Brown-out Reset Selection bit
  3687                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3688                           ;	Flash Program Memory Self Write Enable bits
  3689                           ;	WRT = OFF, Write protection off
  3690  2008                     	org	8200
  3691  2008  3FFF               	dw	16383

Data Sizes:
    Strings     69
    Constant    15
    Data        16
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     26      71
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(1) Largest target is 5
		 -> password(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 5
		 -> pass_user(BANK0[5]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_4(CODE[21]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> buffer(BANK0[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[10]), buffer(BANK0[17]), STR_3(CODE[17]), STR_2(CODE[11]), 
		 -> STR_1(CODE[10]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[10]), buffer(BANK0[17]), STR_3(CODE[17]), STR_2(CODE[11]), 
		 -> STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_funcion_block
    _main->_funcion_seg
    _funcion_seg->_LCD_String_xy
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _funcion_block->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Clear->_LCD_Command
    _LCD_Init->_LCD_Command

Critical Paths under _main in BANK0

    _main->_funcion_moni
    _funcion_seg->_keypad_getkey
    _funcion_moni->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5703
                           _LCD_Init
                     _funcion_alarma
                      _funcion_block
                       _funcion_moni
                        _funcion_seg
                        _keypad_init
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _funcion_seg                                          4     4      0    2143
                                             11 COMMON     3     3      0
                                             19 BANK0      1     1      0
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                      _LCD_String_xy
                      _keypad_getkey
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              6     3      3     319
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (2) _keypad_getkey                                       23    23      0     542
                                              0 COMMON     4     4      0
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (1) _funcion_moni                                         9     9      0    2368
                                             19 BANK0      7     7      0
                      _LCD_String_xy
                  _monitoring_sensor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    20      7    1237
                                              0 BANK0     19    12      7
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _monitoring_sensor                                    1     1      0      26
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _funcion_block                                        3     3      0    1148
                                             11 COMMON     3     3      0
                          _LCD_Clear
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        6     3      3    1104
                                              5 COMMON     6     3      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     165
                                              3 COMMON     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _funcion_alarma                                       3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Command
   _funcion_alarma
   _funcion_block
     _LCD_Clear
       _LCD_Command
     _LCD_String_xy
       _LCD_Command
       _LCD_String
         _LCD_Char
   _funcion_moni
     _LCD_String_xy
     _monitoring_sensor
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _funcion_seg
     _LCD_Char
     _LCD_Clear
     _LCD_Command
     _LCD_String_xy
     _keypad_getkey
     _strncmp
   _keypad_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1A      47       5       88.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      55      12        0.0%
ABS                  0      0      55       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Oct 18 09:06:16 2023

                           pc 0002                  ?_LCD_Command 0070                            l13 024D  
                          l72 07E5                            l90 0397                            l93 03CD  
                          l87 0306                            l99 02DC                            fsr 0004  
                 ?_LCD_String 0073                           l104 0330                           l107 025D  
                         l220 0361                           l116 028A                           l117 0290  
                         l213 05E4                           l119 0297                           l224 0299  
                         l217 04DB                           l226 02B6                           l336 06E4  
                         l194 052E                           l612 044B                           l622 0407  
                         l791 0481                           l796 0491                           _RC0 0038  
                         _RC1 0039                           _RC2 003A                           _RE0 0048  
                         _RE1 0049                           _RE2 004A                           u710 0433  
                         u711 0432                           u800 06ED                           u705 0423  
                         u730 0447                           u810 0707                           u731 0446  
                         u715 042F                           u811 0706                           u660 02DC  
                         u740 03D4                           u900 0767                           u820 0719  
                         u645 03B4                           u661 02DB                           u725 043B  
                         u741 03D3                           u901 0766                           u821 0718  
                         u670 0410                           u910 076E                           u830 0722  
                         u655 037E                           u671 040F                           u911 076D  
                         u831 0721                           u760 03E6                           u920 0780  
                         u840 072B                           u761 03E5                           u921 077F  
                         u841 072A                           u690 0422                           u770 03F0  
                         u930 0789                           u850 0734                           u691 0421  
                         u771 03EF                           u755 03D8                           u931 0788  
                         u851 0733                           u940 0792                           u860 073A  
                         u685 0414                           u941 0791                           u861 0739  
                         u790 0403                           u950 079B                           u870 074C  
                         u791 0402                           u775 03EC                           u951 079A  
                         u871 074B                           u960 07A2                           u880 0755  
                         u785 03F7                           u961 07A1                           u881 0754  
                         u970 07B4                           u890 075E                           u971 07B3  
                         u891 075D                           u980 07BD                           u981 07BC  
                         u990 07C6                           u991 07C5                           _idx 0025  
                         fsr0 0004                           indf 0000                   LCD_Char@dat 0072  
            ??_funcion_alarma 0070                          l1401 03D4                          l1331 03A4  
                        l1411 03F0                          l1403 03D7                          l1341 03C0  
                        l1333 03A5                          l1325 0399                          l1413 03F6  
                        l1405 03DE                          l1501 07B5                          l1421 06E5  
                        l1351 036E                          l1343 03C1                          l1335 03A8  
                        l1327 03A2                          l1415 03FD                          l1407 03E2  
                        l1511 07CB                          l1503 07B9                          l1423 06FA  
                        l1361 038A                          l1353 036F                          l1345 0363  
                        l1337 03B1                          l1329 03A3                          l1521 0308  
                        l1409 03E6                          l1417 0403                          l1505 07BE  
                        l1513 07CF                          l1441 071A                          l1433 06FF  
                        l1425 06FA                          l1363 038B                          l1355 0372  
                        l1347 036C                          l1339 03BF                          l1371 02CC  
                        l1531 0321                          l1523 0308                          l1611 066C  
                        l1603 0640                          l1515 07D5                          l1507 07C2  
                        l1451 0730                          l1443 071E                          l1435 0707  
                        l1427 06FD                          l1357 037B                          l1349 036D  
                        l1365 02B7                          l1533 0327                          l1525 030E  
                        l1541 0282                          l1381 041A                          l1373 0408  
                        l1621 06B0                          l1613 0673                          l1517 07E2  
                        l1509 07C7                          l1461 074D                          l1445 0723  
                        l1437 070F                          l1453 0734                          l1701 05CD  
                        l1359 0389                          l1535 024E                          l1367 02B8  
                        l1527 0314                          l1543 0288                          l1391 043A  
                        l1383 041E                          l1375 040A                          l1623 06B7  
                        l1615 0677                          l1607 065C                          l1631 06DC  
                        l1711 0492                          l1471 0763                          l1463 0751  
                        l1455 073A                          l1447 0727                          l1439 0713  
                        l1703 05D2                          l1537 0254                          l1369 02C6  
                        l1529 031B                          l1721 0336                          l1545 028E  
                        l1393 0441                          l1385 0422                          l1377 0410  
                        l1633 06E0                          l1625 06BB                          l1617 067D  
                        l1609 0666                          l1713 049C                          l1481 0781  
                        l1465 0756                          l1457 0742                          l1473 0767  
                        l1449 072C                          l1553 044D                          l1705 05D8  
                        l1641 023F                          l1651 02E8                          l1731 0298  
                        l1723 0341                          l1547 0294                          l1539 0281  
                        l1387 0433                          l1379 0413                          l1395 0447  
                        l1619 0682                          l1627 06C1                          l1571 05EA  
                        l1715 04A2                          l1491 0797                          l1483 0785  
                        l1475 076E                          l1467 075A                          l1459 0746  
                        l1563 0479                          l1555 044E                          l1707 05DD  
                        l1643 0249                          l1653 02EE                          l1733 029A  
                        l1725 034E                          l1549 0296                          l1389 0439  
                        l1581 0607                          l1573 05EF                          l1629 06CA  
                        l1717 04C1                          l1485 078A                          l1477 0776  
                        l1493 079B                          l1469 075F                          l1565 048F  
                        l1557 0456                          l1709 05E0                          l1661 0532  
                        l1645 024A                          l1741 04DC                          l1655 02F4  
                        l1647 02DD                          l1735 02A7                          l1727 0351  
                        l1719 0331                          l1399 03CE                          l1591 0631  
                        l1575 05F5                          l1495 07A2                          l1487 078E  
                        l1479 077A                          l1559 0466                          l1671 0552  
                        l1663 0532                          l1751 04EF                          l1743 04E0  
                        l1657 02FA                          l1649 02E0                          l1737 02AA  
                        l1729 035E                          l1593 0635                          l1585 0608  
                        l1577 05FC                          l1569 05E8                          l1497 07AA  
                        l1489 0793                          l1681 057B                          l1673 0558  
                        l1665 053D                          l1761 0505                          l1753 04F5  
                        l1745 04E1                          l1659 0300                          l1739 02AE  
                        l1595 0639                          l1587 0625                          l1579 0600  
                        l1499 07AE                          l1691 05AF                          l1683 058F  
                        l1675 0562                          l1667 0543                          l1771 0522  
                        l1763 050B                          l1755 04F9                          l1747 04E6  
                        l1597 063E                          l1589 062D                          l1685 0594  
                        l1693 05B2                          l1677 0566                          l1669 054D  
                        l1773 0528                          l1765 0510                          l1757 04FD  
                        l1749 04EB                          l1695 05BA                          l1687 059F  
                        l1679 0573                          l1767 0516                          l1759 04FE  
                        l1697 05BF                          l1689 05AC                          l1769 051C  
                        l1795 061A                          l1699 05CA                          STR_1 0053  
                        STR_2 0048                          STR_3 0037                          STR_4 0022  
                        STR_5 005D                          u1000 07CF                          u1001 07CE  
                        u1010 07E2                          u1011 07E1                          u1020 030E  
                        u1100 0635                          u1021 030D                          u1101 0634  
                        u1030 0288                          u1110 065B                          u1031 0287  
                        u1111 065A                          u1015 07DE                          u1040 028E  
                        u1120 0666                          u1200 05D8                          u1041 028D  
                        u1121 0665                          u1201 05D7                          u1050 0294  
                        u1130 066C                          u1210 049C                          u1051 0293  
                        u1131 066B                          u1115 0657                          u1211 049B  
                        u1220 02B6                          u1140 06CA                          u1060 0456  
                        u1221 02B5                          u1141 06C9                          u1061 0455  
                        u1150 06DC                          u1070 0466                          u1230 0505  
                        u1151 06DB                          u1071 0465                          u1231 0504  
                        u1080 048F                          u1160 0552                          u1240 0510  
                        u1081 048E                          u1161 0551                          u1241 050F  
                        u1090 05F5                          u1170 057B                          u1250 051C  
                        u1091 05F4                          u1307 073E                          u1171 057A  
                        u1251 051B                          u1180 058F                          u1260 0528  
                        u1317 0772                          u1181 058E                          u1261 0527  
                        u1190 05BA                          u1407 02E4                          u1327 07A6  
                        u1191 05B9                          u1417 0376                          u1337 04D4  
                        u1427 0392                          u1347 0347                          u1357 0357  
                        u1277 056C                          u1367 03AC                          u1287 05A5  
                        u1377 03C8                          u1297 070B                          u1387 0258  
                        u1397 02A0                          _main 04DC                          btemp 007E  
                        start 0000                 _LCD_String_xy 0307              __end_of_LCD_Char 03CE  
            __end_of_LCD_Init 0307                         ?_main 0070               __end_of___lwdiv 044C  
             __end_of___lwmod 0408                         _PORTB 0006                         _PORTD 0008  
                       _TRISB 0086                         _TRISC 0087                         _TRISD 0088  
                       _TRISE 0089                  ?_funcion_seg 0070               __end_of_dpowers 001D  
                ?_keypad_init 0070                         pclath 000A                         status 0003  
                       wtemp0 007E               __end_of_sprintf 06E5               __end_of_strncmp 0492  
              ?_LCD_String_xy 0075               __initialization 07E6                  __end_of_main 0532  
                      ??_main 007E             __end_of_LCD_Clear 025E           keypad_getkey@letras 003D  
                      _ANSELH 0189              LCD_String_xy@msg 0076              LCD_String_xy@pos 0075  
            LCD_String_xy@row 0079                        _OSCCON 008F                 ?_funcion_moni 0070  
                   ??___lwdiv 0074                     ??___lwmod 007C                        _buffer 0027  
                      _estado 0026                        _tiempo 0023              __end_of_password 0022  
             _var_sensor_hall 0021                     ??_sprintf 0044                     ??_strncmp 0073  
                   ?_LCD_Char 0070       __end_of__initialization 07FC                     ?_LCD_Init 0070  
             ??_LCD_String_xy 0078                ??_funcion_moni 0050                __pcstackCOMMON 0070  
                __pidataBANK0 025E                  ??_LCD_String 0075                _OPTION_REGbits 0081  
                  __pbssBANK0 0020                    ??_LCD_Char 0070                    ??_LCD_Init 0073  
          __end_of_LCD_String 02DD                 _funcion_block 0331                    __pmaintext 04DC  
               _keypad_getkey 06E5                    __stringtab 0003                 LCD_String@msg 0073  
              ?_funcion_block 0070             _monitoring_sensor 0281            ?_monitoring_sensor 0070  
                     ___lwdiv 0408                       ___lwmod 03CE                       __ptext1 023F  
                     __ptext2 0532                       __ptext3 044C                       __ptext4 06E5  
                     __ptext5 0492                       __ptext6 05E5                       __ptext7 03CE  
                     __ptext8 0408                       __ptext9 0281           ??_monitoring_sensor 0070  
              ?_keypad_getkey 0070                       _dpowers 0013          __end_of_funcion_moni 04DC  
                   _LCD_Clear 024E                       _sprintf 05E5                       clrloop0 0238  
                     _strncmp 044C          end_of_initialization 07FC                LCD_Command@cmd 0072  
monitoring_sensor@alarm_activ 0070     __end_of_monitoring_sensor 0298              _var_sensor_metal 0020  
                   _PORTDbits 0008                    ?_LCD_Clear 0070               ??_funcion_block 007B  
               ??_LCD_Command 0070               ??_keypad_getkey 0070            keypad_getkey@F1268 0057  
         start_initialization 07E6            keypad_getkey@valor 004D         __end_of_LCD_String_xy 0331  
                  init_fetch0 026E                   __pdataBANK0 0057           __end_of_LCD_Command 0398  
                   ___latbits 0002                 ??_funcion_seg 007B                 __pcstackBANK0 003D  
                 ??_LCD_Clear 0073                 ??_keypad_init 0070                   sprintf@ccnt 0049  
                 sprintf@flag 0048                   sprintf@prec 004B                _funcion_alarma 0298  
            ___lwdiv@dividend 0072                  _funcion_moni 0492                      ?___lwdiv 0070  
                    ?___lwmod 0078                     __pstrings 0003              ___lwdiv@quotient 0075  
       LCD_String_xy@location 007A                      ?_sprintf 003D                      ?_strncmp 0070  
         __end_of_funcion_seg 05E5                      _LCD_Char 0398                      _LCD_Init 02DD  
                   _pass_user 0038        __end_of_funcion_alarma 02B7           __end_of_keypad_init 024E  
                   clear_ram0 0237                   _LCD_Command 0362                   __stringbase 0012  
             ?_funcion_alarma 0070                 _var_sensor_ir 0022            __end_of__stringtab 0013  
                  sprintf@val 004C               ___lwdiv@divisor 0070                   _funcion_seg 0532  
             ___lwdiv@counter 0077                      __ptext10 0331                      __ptext11 0307  
                    __ptext12 02B7                      __ptext13 0398                      __ptext14 024E  
                    __ptext15 0298                      __ptext16 02DD                      __ptext17 0362  
                 _keypad_init 023F                      _contador 0024                    strncmp@len 0071  
       __end_of_funcion_block 0362                      _password 001D                funcion_seg@key 0050  
                  _LCD_String 02B7         __end_of_keypad_getkey 07E6                      init_ram0 0272  
                   sprintf@ap 0047                     sprintf@sp 004E              ___lwmod@dividend 007A  
                   strncmp@s1 0075                     strncmp@s2 0070                     stringcode 000D  
                    sprintf@c 004F                      sprintf@f 003D               ___lwmod@divisor 0078  
             ___lwmod@counter 007D                      stringdir 000D                      stringtab 0003  
              keypad_getkey@i 004E  
